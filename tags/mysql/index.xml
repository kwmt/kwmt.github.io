<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on Androg</title>
    <link>https://kwmt27.net/tags/mysql/</link>
    <description>Recent content in Mysql on Androg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 22 Sep 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kwmt27.net/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Genmaiを使ってみた。 #golang</title>
      <link>https://kwmt27.net/index.php/2014/09/22/try-using-genmai-of-orm-for-golang/</link>
      <pubDate>Mon, 22 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kwmt27.net/index.php/2014/09/22/try-using-genmai-of-orm-for-golang/</guid>
      <description>&lt;p&gt;ORM for golangの&lt;a href=&#34;http://bit.ly/1ucuNGX&#34; target=&#34;_blank&#34;&gt;Genmai&lt;/a&gt;を使って、MySQLにアクセスしてみた。&lt;/p&gt;

&lt;p&gt;使い方は以下の様な感じです。&lt;/p&gt;

&lt;p&gt;テーブルを定義します。&lt;/p&gt;

&lt;pre class=&#34;go&#34;&gt;// ユーザーテーブル
type User struct {
    Id    int `db:&#34;pk&#34;`
    Name  string
    genmai.TimeStamp
}
&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ERROR 2002 (HY000): Can&amp;#8217;t connect to local MySQL server through socket &amp;#8216;/var/lib/mysql/mysql.sock&amp;#8217; (111)</title>
      <link>https://kwmt27.net/index.php/2014/02/27/mysql_error_2002/</link>
      <pubDate>Thu, 27 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kwmt27.net/index.php/2014/02/27/mysql_error_2002/</guid>
      <description>VirtualBoxの仮想マシンが中断になってて、vagrant upで起動して、vagrant sshで入って、mysqlにログインしようとしたら、以下のエラーが出た。
ERROR 2002 (HY000): Can&#39;t connect to local MySQL server through socket &#39;/var/lib/mysql/mysql.sock&#39; (111)  いろいろ調べてて、mysqldをrestartとしてもstartに失敗するし、どうしようかと思って諦めかけようとしたそのとき、下記のサイト様で解決しました。うれしくて、メモとしてリンク張らせて頂きました。ありがとうございます。
mysqlソケットエラー解決法 &amp;#8211; ウマい話、ちょいくれや。 http://bit.ly/1bOmUmS</description>
    </item>
    
    <item>
      <title>#golang でマッチングサイトを作った時の感想。</title>
      <link>https://kwmt27.net/index.php/2013/12/18/golang-advent-calendar-2013/</link>
      <pubDate>Wed, 18 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://kwmt27.net/index.php/2013/12/18/golang-advent-calendar-2013/</guid>
      <description>&lt;p&gt;この記事は &lt;a href=&#34;http://qiita.com/advent-calendar/2013/go&#34; target=&#34;_blank&#34;&gt;Go Advent Calendar 2013&lt;/a&gt; の 18 日目の投稿です。&lt;/p&gt;

&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;

&lt;p&gt;今年もいろいろと行われていますAdvent Calendarですが、初めて参加させて頂きます。プログラミング界隈のプロフェッショナルな方々の中で書くというのは、ただ1人で家で書いてるだけなのに、ちょっと緊張しちゃってます(^^ゞ　&lt;/p&gt;

&lt;p&gt;簡単にGo歴を。&lt;a href=&#34;http://bit.ly/1dJqET7&#34; target=&#34;_blank&#34;&gt;2012年1月に勉強会&lt;/a&gt;に参加してから、シンプルで守備範囲が広そうで強力で、なにより楽しいと感じ、それから自分で勉強したりして発表させて頂いたりしました(&lt;a href=&#34;http://www.slideshare.net/yasi_life/presentations&#34; target=&#34;_blank&#34;&gt;slideshare&lt;/a&gt;)。&lt;a href=&#34;http://go-talks-kwmt.appspot.com/2013/gocon-spring.slide#1&#34; target=&#34;_blank&#34;&gt;神戸からGoCon Springに参加&lt;/a&gt;したり、&lt;a href=&#34;http://bit.ly/1dJqv20&#34; target=&#34;_blank&#34;&gt;神戸から名古屋の勉強会に参加&lt;/a&gt;したりしました。&lt;/p&gt;

&lt;p&gt;そんな中、今年の10月に、マッチングサイトを作ってほしいという話があり、言語は何でもいいとのことだったので、担当者に&amp;#8221;Goはキマスよ&amp;#8221;と訴え続け、Goで作らせて頂きました。&lt;/p&gt;

&lt;p&gt;そこで、よく「Goで何ができるの？」って聞かれますので、「マッチングサイトが作れますよ」という事例を紹介したいところなのですが、そのマッチングサイトは、まだオープンしておらず、残念ながらリンクやスクリーンショットを貼ることができません。ので、そのマッチングサイトを作った時の&amp;#8221;機能&amp;#8221;と&amp;#8221;構成&amp;#8221;を簡単に説明した後、&amp;#8221;感想&amp;#8221;を書いていきたいと思います。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>#Nginx &#43; #golang (FastCGI)&#43; #MySQL を使ったWebアプリケーションを書くための準備</title>
      <link>https://kwmt27.net/index.php/2013/10/03/nginx-golang-fcgi-mysql/</link>
      <pubDate>Wed, 02 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://kwmt27.net/index.php/2013/10/03/nginx-golang-fcgi-mysql/</guid>
      <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;

&lt;p&gt;下記の記事をみたら分かりやすいかもしれませんが、英語なので、実際にやった方法も交えてメモしておこうと思います。（似てるところもありますが、翻訳ではありません。）&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mwholt.blogspot.jp/2013/05/writing-go-golang-web-app-with-nginx.html&#34; target=&#34;_blank&#34;&gt;Writing a Go (&amp;#8220;golang&amp;#8221;) Web App with nginx, FastCGI, MySQL, JSON&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;前提として、Go言語でWebサーバーをつくって動かすと言うと２種類の方法があります。&lt;/p&gt;

&lt;p&gt;１つは、Go言語の&lt;a href=&#34;http://golang.org/pkg/net/http/&#34; target=&#34;_blank&#34;&gt;&amp;#8220;net/http&amp;#8221;&lt;/a&gt;パッケージというのがありますので、これを使ってGo自体でWebサーバーを作ってしまうことができます。&lt;/p&gt;

&lt;p&gt;もう1つは、ApacheやNginxなどのWebサーバー上で、CGI(正確にはFastCGI)としてGo言語を動かす方法です。これはNginx+PHP-FPMのようなもに近いイメージだと思います。&lt;/p&gt;

&lt;p&gt;Nginxを使うか使わないかは、こちらの&lt;a href=&#34;http://stackoverflow.com/questions/17776584/webserver-for-go-golang-webservices-using-nginx-or-not&#34; title=&#34;Webserver for Go (golang) webservices: using NGINX or not?&#34; target=&#34;_blank&#34;&gt;Stackoverflow&lt;/a&gt;をみると、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Go HTTPサーバーはいいんだけど、Webサーバーを一から作るのは大変だよ、Nginxを使った方が簡単だよ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;みたいな感じで、Nginxつかった方がいいよという結論になってます。&lt;/p&gt;

&lt;p&gt;この記事では、2つ目の方法のNginx+golang(FastCGI)でWebアプリケーションを作る準備をメモしたいと思います。&lt;/p&gt;

&lt;p&gt;データベースとしては、MySQLを使いたいと思います。&lt;/p&gt;

&lt;h2 id=&#34;使用環境&#34;&gt;使用環境&lt;/h2&gt;

&lt;pre class=&#34;go&#34;&gt;サーバOS:CentOS release 6.4
Webサーバ:nginx-1.4.1
データベース:mysql  Ver 14.14 Distrib 5.5.27
&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>