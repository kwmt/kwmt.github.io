<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dark Theme on Androg</title>
    <link>https://kwmt27.net/tags/dark-theme/</link>
    <description>Recent content in Dark Theme on Androg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 24 Jan 2021 22:50:00 +0900</lastBuildDate>
    
	<atom:link href="https://kwmt27.net/tags/dark-theme/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jetpack Composeでダークテーマ設定変更によるステータスバーカラーの切り替え方</title>
      <link>https://kwmt27.net/2021/01/24/jetpack-compose-about-swtich-status-bar/</link>
      <pubDate>Sun, 24 Jan 2021 22:50:00 +0900</pubDate>
      
      <guid>https://kwmt27.net/2021/01/24/jetpack-compose-about-swtich-status-bar/</guid>
      <description>はじめに Android端末でダークテーマの切り替えをしたとき、Jetpack Composeでステータスバーカラーの切りかえをする方法を調べたので、メモ。
方法 Jetpack Composeのサンプル、Jetsnackのコードを参考にしています。
interface SystemUiController { fun setStatusBarColor( color: Color, darkIcons: Boolean = color.luminance() &amp;gt; 0.5f ) } fun SystemUiController(window: Window): SystemUiController { return SystemUiControllerImpl(window) } /** * An [androidx.compose.runtime.Ambient] holding the current [SysUiController]. Defaults to a * no-op controller; consumers should [provide][androidx.compose.runtime.Providers] a real one. */ val SysUiController = staticAmbientOf&amp;lt;SystemUiController&amp;gt; { FakeSystemUiController } private class SystemUiControllerImpl(private val window: Window) : SystemUiController { override fun setStatusBarColor( color: Color, darkIcons: Boolean ) { window.</description>
    </item>
    
  </channel>
</rss>