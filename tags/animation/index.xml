<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Animation on Androg</title>
    <link>https://kwmt27.net/tags/animation/</link>
    <description>Recent content in Animation on Androg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 06 Mar 2021 12:30:00 +0900</lastBuildDate>
    
	<atom:link href="https://kwmt27.net/tags/animation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Animation and Jetpack Compose</title>
      <link>https://kwmt27.net/2021/03/06/jetpack-compose-animation/</link>
      <pubDate>Sat, 06 Mar 2021 12:30:00 +0900</pubDate>
      
      <guid>https://kwmt27.net/2021/03/06/jetpack-compose-animation/</guid>
      <description>はじめに Jetpack Compose: Animation
単一アニメーション @Composable fun AnimateAsStateDemo() { var blue by remember { mutableStateOf(true) } val color = if (blue) Blue else Orange Column { Button(onClick = { blue = !blue }) { Text(text = &amp;quot;CHANGE COLOR&amp;quot;) } Spacer(modifier = Modifier.height(16.dp)) Box( modifier = Modifier .size(128.dp) .background(color) ) } }  この例では、BooleanのStateの値blueを持っていて、 ボタンをクリックするとそのStateは反転します。
BoxのカラーがそのBooleanの状態によって切り替わります。
カラーの変更部分をanimateColorAsSate関数でラップすることで、簡単にアニメーションすることができます。（デフォルトはフェードアニメーションなのかな？）
val color by animateColorAsState(if (blue) Blue else Orange)  （初回だけアニメーションしてないように見える）
複数のアニメーションを同時に実行したい 以下はBoxのサイズとカラーの値を同時に変更しています。まだアニメーションはしていません。
private enum class BoxState { Small, Large } @Composable fun UpdateTransitionDemo() { var boxState by remember { mutableStateOf(BoxState.</description>
    </item>
    
  </channel>
</rss>