<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android on Androg</title><link>https://kwmt27.net/tags/android/</link><description>Recent content in Android on Androg</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Fri, 30 Jul 2021 18:00:00 +0900</lastBuildDate><atom:link href="https://kwmt27.net/tags/android/index.xml" rel="self" type="application/rss+xml"/><item><title>Camera2APIでカメラプレビュー中に光センサーの値によってライトを自動でON/OFFにする</title><link>https://kwmt27.net/2021/07/30/android-camera2-light-on-by-light-sensor/</link><pubDate>Fri, 30 Jul 2021 18:00:00 +0900</pubDate><guid>https://kwmt27.net/2021/07/30/android-camera2-light-on-by-light-sensor/</guid><description>はじめに Camera2APIを使って、カメラプレビュー中に（フラッシュではなく）ライトをONにできるのか？ 周りが暗くなったら自動でライトをONにできるか？ というのが気になって調べたのでメモしておく。
camera-samplesをベースに試した全体的なコードはこちら。 https://github.com/kwmt/camera-samples/pull/1/
1. Camera2APIを使って、カメラプレビュー中に（フラッシュではなく）ライトをONにできるのか？調べている中で、ライトのことをTorch Modeというらしいことを知った。
まず目に入ったのが、CameraMangaer#setTorchModeというメソッドで、これを（ドキュメントを読まずに^^;）試してみたら（カメラプレビュー中にコールする）、CAMERA_IN_USEという例外がスローされてしまう。
これはよくよくドキュメントを見ると
Set the flash unit&amp;rsquo;s torch mode of the camera of the given ID without opening the camera device.
カメラデバイスを開かずに、指定されたIDのカメラのフラッシュユニットのトーチモードを設定します。
とあり、カメラプレビュー中ということはカメラをopenしている状態なので、openしてない場合に使えるメソッドであることがわかった。
別の方法を検討する。
こちらのstackoverflowで次のようなことを見つけた。 https://stackoverflow.com/a/57331014/2520998
Once the camera is open, you can use FLASH_MODE and set it to TORCH in your preview capture request. This means you need to keep AE_MODE to either ON or OFF, not one of the FLASH modes, so that auto-exposure isn&amp;rsquo;t controlling the flash.</description></item><item><title>Jetpack ComposeでCameraXを実装する</title><link>https://kwmt27.net/2021/06/12/jetpack-compose-camerax/</link><pubDate>Sat, 12 Jun 2021 21:25:00 +0900</pubDate><guid>https://kwmt27.net/2021/06/12/jetpack-compose-camerax/</guid><description>はじめにcomposeバージョンは下記です。
Jetpack ComposeでのCameraXの実装を試したのでメモしておきたいと思います。 下の動画のようなイメージです。
ソースはGitHubにおいてます。 https://github.com/kwmt/JetpackComposePlayGround/tree/main/camerax/src/main/java/net/kwmt27/camerax
実行するときはConfigurationをcameraxを選択してから実行してみてください。
CameraXはAndroidViewを使う現在のところ、CameraXを使うにはAndroidViewを使うしかなさそうです。 以下のようにしました。
usecaseをバインドするusecaseをバインドしてるところは下記のところです。 使用しているUseCaseは、Preview、ImageAnalysisです。 この部分はいままでのcomposeを使わない場合と同じですね。
RuntimePermissionの実装カメラはもちろんRuntimePermissionの実装が必要でそれは次のようにやっています。
まず、カメラパーミッションが拒否されたときの画面を作成します。
このとき、設定画面にstartActivityResultで行って、戻ってきたときのイベントを伝えるために callback: () -&amp;gt; Unitを渡していますので、設定画面から戻ってきたら handler.requestがよばれます。
handlerはPermissionHandlerという自前のクラスを作っていて、そこでカメラパーミッションが許可されてなければ、設定画面に遷移するし、許可されていれば、onGrantedというFlowに通知します。
以上です。</description></item><item><title>Android targetSdkVersionを28から30への変更したときのメモ</title><link>https://kwmt27.net/2021/06/12/android-update-targertsdk-from-28-to-30/</link><pubDate>Sat, 12 Jun 2021 18:00:00 +0900</pubDate><guid>https://kwmt27.net/2021/06/12/android-update-targertsdk-from-28-to-30/</guid><description>Activityエラー内容e: /Users/kwmt/work/personal/QRCodeReader/core/presentation/src/main/java/net/kwmt27/presentation/MainActivity.kt: (61, 5): &amp;#39;onRestoreInstanceState&amp;#39; overrides nothing 原因onRestoreInstanceStateメソッドの引数のsavedInstanceStateに@NonNullアノテーションがついたため、 protected void onRestoreInstanceState(@NonNull Bundle savedInstanceState)
対策- override fun onRestoreInstanceState(savedInstanceState: Bundle?) { + override fun onRestoreInstanceState(savedInstanceState: Bundle) { super.onRestoreInstanceState(savedInstanceState) 該当箇所 API level 28 https://cs.android.com/android/platform/superproject/+/android-9.0.0_r8:frameworks/base/core/java/android/app/Activity.java;bpv=1;bpt=1;l=1131
API Level 29 https://cs.android.com/android/platform/superproject/+/android-10.0.0_r30:frameworks/base/core/java/android/app/Activity.java;l=1566
ConnectivityManagerエラー内容e: /Users/kwmt/work/personal/QRCodeReader/core/presentation/src/main/java/net/kwmt27/presentation/WifiLifeCycle.kt: (66, 17): &amp;#39;onAvailable&amp;#39; overrides nothing e: /Users/kwmt/work/personal/QRCodeReader/core/presentation/src/main/java/net/kwmt27/presentation/WifiLifeCycle.kt: (71, 17): &amp;#39;onLost&amp;#39; overrides nothing 原因これもNonNullアノテーションがついたため
対策該当箇所 onAvailable https://cs.android.com/android/platform/superproject/+/master:frameworks/base/core/java/android/net/ConnectivityManager.java;l=3409?q=ConnectivityManager&amp;ss=android%2Fplatform%2Fsuperproject
onLost https://cs.android.com/android/platform/superproject/+/master:frameworks/base/core/java/android/net/ConnectivityManager.java;l=3449?q=ConnectivityManager&amp;ss=android%2Fplatform%2Fsuperproject
ClipboardManagerエラー内容e: /Users/kwmt/work/personal/QRCodeReader/core/presentation/src/main/java/net/kwmt27/presentation/common/Navigator.kt: (41, 9): Val cannot be reassigned val clipboardManager = fragment.context?.getSystemService(Context.CLIPBOARD_SERVICE) as? ClipboardManager ?: return clipboardManager.</description></item><item><title>Jetpack Composeでインクリメンタルサーチ(SearchBar UI)を実装するには</title><link>https://kwmt27.net/2021/05/15/jetpack-compose-searchbar/</link><pubDate>Sat, 15 May 2021 13:20:00 +0900</pubDate><guid>https://kwmt27.net/2021/05/15/jetpack-compose-searchbar/</guid><description>はじめにcomposeバージョンは 1.0.0-beta04 です。
検索入力欄に検索した文字列を入れるとリストが絞り込まれる、いわゆるインクリメンタルサーチを実装したいとおもいます。下の動画のようなイメージです。
SearchBarのUIを作るには？ だいたいこんな感じで作れます。
ROOMで部分検索するには@Dao interface QrResultDao { @Query(&amp;#34;SELECT * from qr_results WHERE text LIKE &amp;#39;%&amp;#39; || :query || &amp;#39;%&amp;#39; &amp;#34; + &amp;#34;OR name LIKE &amp;#39;%&amp;#39; || :query || &amp;#39;%&amp;#39; ORDER BY updated_at DESC&amp;#34;) suspend fun search(query: String): List&amp;lt;QrResultEntity&amp;gt; } こんな感じ。
ViewModelの実装は SearchQrResultUseCaseを使ってますが、基本的にはDaoのsearchまでの橋渡しなので省略。型変換とかはしています。
SearchBarとリストをくっつけると listを監視して、検索されたらUIに通知するみたいな感じです。
以上です。</description></item><item><title>コールバックをFlowに変換するには</title><link>https://kwmt27.net/2021/04/29/coroutine-flow-callbackflow/</link><pubDate>Thu, 29 Apr 2021 13:00:00 +0900</pubDate><guid>https://kwmt27.net/2021/04/29/coroutine-flow-callbackflow/</guid><description>はじめにinterface OnChangeListener { fun onChange() } のようなコールバックを、Flowに変換するにはどうすればいいかを調べました。
RxJavaでいうところ、Observable.create のようなことを実現するにはどうすればいいかという記事です。
結論callbackFlowというAPIがcoroutineに用意されてるので、それを使うと良さそうです。
これは、cold flowを生成します。つまり、collectされるまで動きません。
サンプルサンプルを書いてみました。
flowFlow関数で、callbackFlowを使ってコールバックからFlowに変換しています。 OnChangeListener#onChangeの実装でofferを使用してチャンネルに追加しています。 容量がいっぱいの場合は例外がなげられるとのこと。
awaitClose でunregsiterやcancel処理を実装する必要があります。 これを実装しなければ、実行時に
IllegalStateException: &amp;lsquo;awaitClose { yourCallbackOrListener.cancel() }&amp;rsquo; should be used in the end of callbackFlow block.
というエラーがでます。（感想ですが、クローズ処理を忘れないので、良い仕組みだと思います！）
callbackからflowに変換できたので、あとはcollectしてあげるだけです。 このサンプルでは、1秒ごとにログに値が出力されます。
onchange: 1 onchange: 2 onchange: 3 onchange: 4 onchange: 5 onchange: 6 onchange: 7 ...</description></item><item><title>Jetpack Compose PlayGround</title><link>https://kwmt27.net/2021/03/28/jetpack-compose-playground/</link><pubDate>Sun, 28 Mar 2021 19:00:00 +0900</pubDate><guid>https://kwmt27.net/2021/03/28/jetpack-compose-playground/</guid><description>はじめに※こちらは更新予定です。
確認環境は下記です。
compose_version: 1.0.0-beta02 kotlin version: 1.4.31 Android Studio version: Android Studio Arctic Fox | 2020.3.1 Canary 12 確認したコードはGitHubにおいてます。
https://github.com/kwmt/JetpackComposePlayGround
縦方向（Vertical）のリスト表示するには縦方向（Vertical）のリストを表示するには、LazyColumn を使います。
import androidx.compose.foundation.lazy.LazyColumn @Composable fun SampleList() { LazyColumn { items(5) { index -&amp;gt; // 各要素で表示したいUIを書く。 ListItem(index) } } } 多くのアイテムやサイズのわからないリストを表示する必要がある場合、Columnのようなレイアウトを使用すると、全てのアイテムが表示されるかどうかに関わらずレイアウトされるので、パフォーマンスに影響があります。 LazyColumnやLazyRowは表示されるアイテムのみをレイアウトするコンポーネントになります。（RecyclerViewと同じ概念）
ついでに、リストの各要素はComposableListItemは自作のComposable関数で、リストアイテムのUIを定義しています。
@Composable fun ListItem(index: Int = 0) { Column { Box( modifier = Modifier .height(200.dp) .background(Color.Blue) .fillMaxWidth() ) { Text( modifier = Modifier.align(Alignment.Center), text = &amp;#34;index: $index&amp;#34;, style = TextStyle(color = Color.</description></item><item><title>Jetpack Compose Dev Challenge Week3で学んだことまとめ</title><link>https://kwmt27.net/2021/03/15/jetpack-compose-dev-challenge-week3/</link><pubDate>Mon, 15 Mar 2021 12:00:00 +0900</pubDate><guid>https://kwmt27.net/2021/03/15/jetpack-compose-dev-challenge-week3/</guid><description>jetpack compose
全体にかかわること(テーマなど)背景を入れるにはSurface(color = MaterialTheme.colors.primary) が大事
Welcome画面Login画面Textの途中でリンクを入れるhttps://stackoverflow.com/questions/65567412/jetpack-compose-text-hyperlink-some-section-of-the-text
EditTextの枠線の色を変更するにはoutlinedTextFieldColorsの部分
OutlinedTextField( modifier = Modifier .height(56.dp) .fillMaxWidth(), value = &amp;#34;&amp;#34;, onValueChange = { /*TODO*/ }, placeholder = { Text( text = &amp;#34;Password (8+ characters)&amp;#34;, style = DevChallengeTheme.typography.body1, color = DevChallengeTheme.colors.textBody1, ) }, colors = outlinedTextFieldColors( cursorColor = DevChallengeTheme.colors.textBody1, focusedBorderColor = DevChallengeTheme.colors.textBody1.copy(alpha = ContentAlpha.high), unfocusedBorderColor = DevChallengeTheme.colors.textBody1, ), singleLine = true, ) 検索ボックスを作成（SearchBar)ここが参考になりそう。 https://github.com/android/compose-samples/blob/main/Jetsnack/app/src/main/java/com/example/jetsnack/ui/home/search/Search.kt
ホーム画面###BottomNavigation
https://developer.android.com/jetpack/compose/navigation#bottom-nav https://proandroiddev.com/implement-bottom-bar-navigation-in-jetpack-compose-b530b1cd9ee2
BottomItemを切り替えまくっても、バックで、startDestinationに戻る(cart -&amp;gt; Profileと遷移してバックし場合cartに戻っていたのをhomeに戻るようにする) navController.navigate(screen.route) { // BottomItemを切り替えまくっても、バックで、startDestinationに戻る popUpTo = navController.</description></item><item><title>Animation and Jetpack Compose</title><link>https://kwmt27.net/2021/03/06/jetpack-compose-animation/</link><pubDate>Sat, 06 Mar 2021 12:30:00 +0900</pubDate><guid>https://kwmt27.net/2021/03/06/jetpack-compose-animation/</guid><description>はじめにJetpack Compose: Animation
単一アニメーション@Composable fun AnimateAsStateDemo() { var blue by remember { mutableStateOf(true) } val color = if (blue) Blue else Orange Column { Button(onClick = { blue = !blue }) { Text(text = &amp;#34;CHANGE COLOR&amp;#34;) } Spacer(modifier = Modifier.height(16.dp)) Box( modifier = Modifier .size(128.dp) .background(color) ) } } この例では、BooleanのStateの値blueを持っていて、 ボタンをクリックするとそのStateは反転します。
BoxのカラーがそのBooleanの状態によって切り替わります。
カラーの変更部分をanimateColorAsSate関数でラップすることで、簡単にアニメーションすることができます。（デフォルトはフェードアニメーションなのかな？）
val color by animateColorAsState(if (blue) Blue else Orange) （初回だけアニメーションしてないように見える）
複数のアニメーションを同時に実行したい以下はBoxのサイズとカラーの値を同時に変更しています。まだアニメーションはしていません。
private enum class BoxState { Small, Large } @Composable fun UpdateTransitionDemo() { var boxState by remember { mutableStateOf(BoxState.</description></item><item><title>State and Jetpack Compose</title><link>https://kwmt27.net/2021/03/06/jetpack-compose-state/</link><pubDate>Sat, 06 Mar 2021 12:30:00 +0900</pubDate><guid>https://kwmt27.net/2021/03/06/jetpack-compose-state/</guid><description>はじめに基本的には、書きを参考に自分なりにまとめたものです。
State and Jetpack Compose Jetpack Compose 入門 composeバージョンは 1.0.0-beta01 です。 StateComposeでは状態をStateというもので扱います。
外から変更可能な MutableStateと外からは変更できないStateがあります。
@Stable interface MutableState&amp;lt;T&amp;gt; : State&amp;lt;T&amp;gt; { override var value: T operator fun component1(): T operator fun component2(): (T) -&amp;gt; Unit } @Stable interface State&amp;lt;T&amp;gt; { val value: T } var expanded by remember { mutableStateOf(false) } mutableStateOfで新しいBooleanのStateを作成しています。
Buttonのクリックイベントの中でその値を変更しています。
onClick = { expanded = true } Stateを使っている箇所が再描画されます。
Composable関数は必要に応じて再実行されます。これをrecomposition(再構成) とよびます。
stateを宣言する時、by はKotlinのデリゲートプロパティという機能。
byを使わず =を使うこともできますが、expanded.value = trueのように.valueをつける必要があります。
var expanded = remember { mutableStateOf(false) } rememberrememberもComposable関数です.</description></item><item><title>Layout in Jetpack compose</title><link>https://kwmt27.net/2021/02/07/jetpack-compose-layout/</link><pubDate>Sun, 07 Feb 2021 14:30:00 +0900</pubDate><guid>https://kwmt27.net/2021/02/07/jetpack-compose-layout/</guid><description>はじめに基本的には、こちらのコードラボをメモしたものです。 https://developer.android.com/codelabs/jetpack-compose-layouts
試したことはこちらに置いてます。
縦に並べるにはColumn を使う
Column { Text(&amp;#34;Alfred Sisley&amp;#34;, fontWeight = FontWeight.Bold) Providers(AmbientContentAlpha provides ContentAlpha.medium) { Text(&amp;#34;3 minutes ago&amp;#34;, style = MaterialTheme.typography.body2) } } 横に並べるにはRowを使う
Row { Surface( modifier = Modifier.preferredSize(50.dp), shape = CircleShape, color = MaterialTheme.colors.onSurface.copy(alpha = 0.2f) ) { // image goes here } Column { Text(&amp;#34;Alfred Sisley&amp;#34;, fontWeight = FontWeight.Bold) Providers(AmbientContentAlpha provides ContentAlpha.medium) { Text(&amp;#34;3 minutes ago&amp;#34;, style = MaterialTheme.typography.body2) } } } ここでは、円形画像のプレースホルダーを作るためにSurfaceを使って、先程のColumnと横に並べています。
プレースホルダーとテキストの間に、パディングをいれるには- Column { + Column( + modifier = Modifier.</description></item><item><title>Jetpack ComposeでBitmapを表示するには</title><link>https://kwmt27.net/2021/01/31/jetpack-compose-about-bitmap/</link><pubDate>Sun, 31 Jan 2021 22:50:00 +0900</pubDate><guid>https://kwmt27.net/2021/01/31/jetpack-compose-about-bitmap/</guid><description>Jetpack ComposeでBitmapを表示するには、Image関数を使い、引数にBitmapを渡せばいいのですが、そのときImageBitmapに変換する必要があるようで、 そのためにasImageBitmap()という拡張関数が生えてるので、それを使えばよさそうです。
import androidx.compose.foundation.Image import androidx.compose.ui.graphics.asImageBitmap Image( bitmap.asImageBitmap(), )</description></item><item><title>Jetpack Composeでダークテーマ設定変更によるステータスバーカラーの切り替え方</title><link>https://kwmt27.net/2021/01/24/jetpack-compose-about-swtich-status-bar/</link><pubDate>Sun, 24 Jan 2021 22:50:00 +0900</pubDate><guid>https://kwmt27.net/2021/01/24/jetpack-compose-about-swtich-status-bar/</guid><description>はじめにAndroid端末でダークテーマの切り替えをしたとき、Jetpack Composeでステータスバーカラーの切りかえをする方法を調べたので、メモ。
方法Jetpack Composeのサンプル、Jetsnackのコードを参考にしています。
interface SystemUiController { fun setStatusBarColor( color: Color, darkIcons: Boolean = color.luminance() &amp;gt; 0.5f ) } fun SystemUiController(window: Window): SystemUiController { return SystemUiControllerImpl(window) } /** * An [androidx.compose.runtime.Ambient] holding the current [SysUiController]. Defaults to a * no-op controller; consumers should [provide][androidx.compose.runtime.Providers] a real one. */ val SysUiController = staticAmbientOf&amp;lt;SystemUiController&amp;gt; { FakeSystemUiController } private class SystemUiControllerImpl(private val window: Window) : SystemUiController { override fun setStatusBarColor( color: Color, darkIcons: Boolean ) { window.</description></item><item><title>Jetpack ComposeのAmbientについて</title><link>https://kwmt27.net/2021/01/17/jetpack-compose-about-ambient/</link><pubDate>Sun, 17 Jan 2021 22:50:00 +0900</pubDate><guid>https://kwmt27.net/2021/01/17/jetpack-compose-about-ambient/</guid><description>はじめにJetpack Composeでステータスバーのカラーを変更するにはどうすればいいか調べていたら、ambientというキーワードが出てきて、なにものかがわからなかったのでメモです。
AmbientとはAmbientとは、FlutterのProviderのようなものです。
サンプルコードを見たほうがわかりやすいと思いますので、見てみましょう。
// ① Ambientを作ります。 val ActiveUser = ambientOf&amp;lt;User&amp;gt; { error(&amp;#34;No active user found!&amp;#34;) } @Composable fun App(user: User) { // ② `Providers`コンポーネントを使用して、ambinentに値を渡します。 Providers(ActiveUser provides user) { SomeScreen() } } // ③ツリーの間にあるコンポーネントはAmbientの値を知る必要はありません。 @Composable fun SomeScreen() { UserPhoto() } @Composable fun UserPhoto() { // ④ `current`プロパティを使うことでAmbinentの値を使うことができます。 val user = ActiveUser.current ProfileIcon(src = user.profilePhotoUrl) } もしAmbientを使わなければ、コンポーネントに引数で渡していくことになり、渡された値が必要のないコンポーネントまで余計なものを知る必要が出てきてしまいます。
ambientOfとstaticAmbinentOfの違いについてJetpack Compose - What is the Difference Between ambientOf and staticAmbientOf こちらが詳しいです。
各ドキュメントはこちら
ambientOf staticAmbientOf テーマの変更、端末の言語設定など変更機会が少なく、読み込みが書き込みより多い場合に staticAmbientOfを使うそうです。</description></item><item><title>Jetpack Composeを既存のアプリと共存するには</title><link>https://kwmt27.net/2021/01/16/jetpack-compose/</link><pubDate>Sat, 16 Jan 2021 22:50:00 +0900</pubDate><guid>https://kwmt27.net/2021/01/16/jetpack-compose/</guid><description>現象次のエラーが出た。
Execution failed for task &amp;#39;:core:presentation:prepareDebugKotlinCompileTask&amp;#39;. &amp;gt; Could not resolve all files for configuration &amp;#39;:core:presentation:kotlin-extension&amp;#39;. &amp;gt; Could not find androidx.compose:compose-compiler:1.0.0-alpha08. Searched in the following locations: - https://dl.google.com/dl/android/maven2/androidx/compose/compose-compiler/1.0.0-alpha08/compose-compiler-1.0.0-alpha08.pom - https://jcenter.bintray.com/androidx/compose/compose-compiler/1.0.0-alpha08/compose-compiler-1.0.0-alpha08.pom - https://www.jitpack.io/androidx/compose/compose-compiler/1.0.0-alpha08/compose-compiler-1.0.0-alpha08.pom - https://oss.sonatype.org/content/repositories/snapshots/androidx/compose/compose-compiler/1.0.0-alpha08/compose-compiler-1.0.0-alpha08.pom - https://kotlin.bintray.com/kotlinx/androidx/compose/compose-compiler/1.0.0-alpha08/compose-compiler-1.0.0-alpha08.pom Required by: project :core:presentation Possible solution: - Declare repository providing the artifact, see the documentation at https://docs.gradle.org/current/userguide/declaring_repositories.html 原因Android Gradle Pluginのバージョンが古かったため
対策 classpath(&amp;#34;com.android.tools.build:gradle:4.1.0&amp;#34;) + classpath(&amp;#34;com.android.tools.build:gradle:7.0.0-alpha02&amp;#34;) -distributionUrl=https\://services.gradle.org/distributions/gradle-6.7-all.zip +distributionUrl=https://services.gradle.org/distributions/gradle-6.7.1-all.zip 現象AGPのバージョンを7.0.0にするとGradle Syncで以下のエラーが出る classpath(&amp;ldquo;com.android.tools.build:gradle:7.0.0-alpha02&amp;rdquo;)
Unable to find method &amp;#39;&amp;#39;void com.android.build.gradle.internal.dsl.BaseAppModuleExtension.onVariants(kotlin.jvm.functions.Function1)&amp;#39;&amp;#39; &amp;#39;void com.</description></item><item><title>RxJavaのサンプルを作るにあたって、Androidアプリを作ってみた。</title><link>https://kwmt27.net/2020/03/26/to-make-a-sample-of-rxjava-i-tried-to-make-an-android-app/</link><pubDate>Thu, 26 Mar 2020 00:13:00 +0900</pubDate><guid>https://kwmt27.net/2020/03/26/to-make-a-sample-of-rxjava-i-tried-to-make-an-android-app/</guid><description>最近RxJavaを使い始めたら、めちゃめちゃ便利！ということを知って、使い方のサンプルを書いておこうと、書きました。サンプルとして割りきってしまえば、これはこれでありなんだと思うんですが、実際はいろんなライブラリと組み合わせて使うわけで、たとえばRetrofitと一緒に使うのはどうするんだろうとか思って書き始めていたら、何かアプリを作ってみた方が実用的になるかもと思って、Androidアプリを作ってみました。
アプリの詳細はPlay Storeの説明を見ていただきたいのですが、簡単に言うと、リストをGithubAPIから取得して表示し、そのリストの各項目をタップすると詳細がみれるという、よくあるアプリです。
このアプリは、自分の実験アプリで、自分のなかで試してみたいことを試してみてます。
いままでMVCでコード書いてたのですが、MVPにしてみよう！とか、 Retrofit使ったことなかったので使ってみようとか、 RxBinding使ってスクロールの一番下で行ったら読み込んでみよう RecyclerViewで一部のitemを異なるviewTypeにしたい Firebase使ってみよう！ wercker CIを使ってみようとか、 Google Play Developer Publishing APIを使ってPlay Storeに自動アップロードしてみようとか、 Retrolambdaを使わずにラムダ式が使える(一部だけ)ので使ってみようとか。 です。
最後のラムダ式を使うに関して、Retrolambdaを使わずラムダ式を使うには、Jackを有効にしないといけなくて、Jackを有効にすると、 Instant Run is disabled when Jack compiler is used. と表示されるようにInstant runが無効になってしまいますので、短く書けるのを取るかコンパイル速度を取るか、悩みどころです。いずれJackでもInstant runができることを期待しているので、コンパイル速度は諦めてます。
レポジトリhttps://github.com/kwmt/GitHubSearch
ちなみに、自分がRxJavaを使うと便利になった思うこと ModelからViewへの通知を今までObserverパターンを自作していたが、それが不要になった 連続して複数回APIを呼ぶなどするとコールバック地獄になるので読みにくくなってしまうのを、1回のコールバックで受けれるので読みやすくなった リスト操作やAPIコールをObservable(Stream)として同じように扱える ただnew Func1とか書きたくないから、早く世の中の端末がAndroid N以降になってくれないかな。
RxJavaの課題というか悩みどころ subscription はModelで持つべきか、Viewで持ったほうがいいか悩みます。 リスト操作はfor文使わなくてよくなったけど、全部が全部RxJavaを使うかどうか再利用の関係で悩みます。ユーティリティ系のクラスは別のプロジェクトでも使いまわせたりしますが、RxJavaでリスト操作してしまうとそのユーティリティを使うなら必ずRxJavaの導入が必要になってきます。RxJavaが導入されてないプロジェクトだったりすると、そのユーティリティクラスは使えないので、for文の方がいいんじゃないかと思ってしまいます。</description></item><item><title>Androidプロジェクトの新規作成からプッシュ通知受信確認まで</title><link>https://kwmt27.net/2020/03/26/from-creating-a-new-android-project-to-confirming-receipt-of-push-notifications/</link><pubDate>Thu, 26 Mar 2020 00:11:00 +0900</pubDate><guid>https://kwmt27.net/2020/03/26/from-creating-a-new-android-project-to-confirming-receipt-of-push-notifications/</guid><description>はじめに1年ぐらい前にプッシュ通知を実装したときから設定方法が若干変わっていたので、この記事がいつまで有効かはわかりませんが、Androidプロジェクトの新規作成からプッシュ通知受信確認までを書いておこうと思います。
この記事を書いている時点で使用しているAndroid Studioバージョンは2.0です。
さて、最初にAndroid StudioでEmptyActivityを指定して、PushNotificationSampleという名前のNewProjectを作成しておきます。その前提で以下、話を進めていきます。
サンプルプロジェクトリポジトリ全体のプロジェクトはkwmt/PushNotificationSampleに置いています。
Configurationファイル(JSONファイル)を準備するAdd Google Services にアクセスして、Configuration fileを作成します。
作成したgoogle-services.jsonをapp/の直下に置きます。
※Flavor毎に異なったgoogle-services.jsonを使いたい場合は、 google-services:2.0.0-bata3からできそうという話があったが、実際動かないらしいので、betaとれるの待つしかなのかなぁ。 → 2.1.0-beta1で出来るようになりました。(2016/04/18追記)
※google-services-gcmを追加したあと、gradleをsyncする時にgoogle-services.jsonファイルがないと、たとえばBuild Variantをdebugに指定しているときは、下記のようなエラーが出ますのでご注意下さい。
Error:Execution failed for task &amp;#39;:app:processDebugGoogleServices&amp;#39;. &amp;gt; File google-services.json is missing. The Google Services Plugin cannot function without it. Searched Location: PushNotificationSample/app/src/debug/google-services.json PushNotificationSample/app/google-services.json build.gradleを編集google-servicesを追加するプロジェクトトップのbuild.gradleを編集します。--- a/build.gradle +++ b/build.gradle @@ -5,8 +5,9 @@ buildscript { jcenter() } dependencies { - classpath &amp;#39;com.android.tools.build:gradle:1.5.0&amp;#39; - + classpath &amp;#39;com.android.tools.build:gradle:2.1.0-beta1&amp;#39; + // https://develop ers.google.com/cloud-messaging/android/client + classpath &amp;#39;com.google.gms:google-services:2.1.0-beta1&amp;#39; // NOTE: Do not place your application dependencies here; they belong // in the individual module build.</description></item><item><title>Support Design LibraryのBottomNavigationViewを読んだ</title><link>https://kwmt27.net/2020/03/26/read-bottomnavigationview-in-the-support-design-library/</link><pubDate>Thu, 26 Mar 2020 00:10:00 +0900</pubDate><guid>https://kwmt27.net/2020/03/26/read-bottomnavigationview-in-the-support-design-library/</guid><description>はじめにsupport design libraryの特にBottomNavigationViewを読んでみました。
ガイドライン原文・日本語訳に書いてあるのが、どのようにコードで書かれているのかという視点で読みました。
ちなみに、BottomNavigationというのはこのようなものです。
BottomNavigationViewを読む[ガイドライン]最上位の移動先を3～5個表示する 6個にした場合 IllegalArgumentExceptionが出ます。
2個にした場合 Exceptionは出ずに、2個表示されます。
BottomNavigationView が BottomNavivgationMenu (MenuBuilder) に対して、app:menuで指定した app:menu=&amp;quot;@menu/navigation&amp;quot; navigation.xmlをinflateする際にBottomNavivgationMenuにaddします。
BottomNavigationViewのコンストラクタでapp:menu=&amp;quot;@menu/navigation&amp;quot;をinflateします。
if (a.hasValue(R.styleable.BottomNavigationView_menu)) { inflateMenu(a.getResourceId(R.styleable.BottomNavigationView_menu, 0)); } XMLをパースしながらBottomNavivgationMenuインスタンスに対してaddしているところがあり、
public void addItem() { itemAdded = true; setItem(menu.add(groupId, itemId, itemCategoryOrder, itemTitle)); } ※`menu`が`BottomNavivgationMenu`インスタンスとなる。 この時、実際にaddする前にMenuのサイズがMAX_ITEM_COUNT(5)個より多かったら、IllegalArgumentExceptionを出しているようです。
if (size() + 1 &amp;gt; MAX_ITEM_COUNT) { throw new IllegalArgumentException( &amp;#34;Maximum number of items supported by BottomNavigationView is &amp;#34; + MAX_ITEM_COUNT + &amp;#34;. Limit can be checked with BottomNavigationView#getMaxItemCount()&amp;#34;); } stopDispatchingItemsChanged(); final MenuItem item = super.</description></item><item><title>Android Studioを2.1に上げると、ActiveAndroidでエラーが出た場合の対処法</title><link>https://kwmt27.net/2020/03/26/what-to-do-if-you-get-an-error-in-activeandroid-when-you-increase-android-studio-to-2.1/</link><pubDate>Thu, 26 Mar 2020 00:00:00 +0900</pubDate><guid>https://kwmt27.net/2020/03/26/what-to-do-if-you-get-an-error-in-activeandroid-when-you-increase-android-studio-to-2.1/</guid><description>問題Android Studioを2.1にあげると、com.android.tools.build:gradleも2.1.0に上げれるのですが、上げてしまうと、以下のようなエラーがでて、Android6.0で落ちるようになってしまいました。
Caused by: java.lang.NullPointerException: Attempt to invoke virtual method &amp;#39;java.lang.String com.activeandroid.TableInfo.getIdName()&amp;#39; on a null object reference at com.activeandroid.Model.&amp;lt;init&amp;gt;(Model.java:55) 対策調べてみるとActiveAndroidのissueに書いてあったが、AA_MODELSに com.activeandroid.Model を継承しているクラスを指定したmeta-dataを追加すると良いとのとこ。 https://github.com/pardom/ActiveAndroid/issues/461#issuecomment-207252708
こんな感じになりました。
&amp;lt;meta-data android:name=&amp;#34;AA_MODELS&amp;#34; android:value=&amp;#34;com.my.db.ModelAxx, com.my.db.ModelBxx&amp;#34;/&amp;gt; 原因まったく同じソースで、com.android.tools.build:gradleが2.0.0だったら問題なかったので、このバージョンアップのなにかが原因だと思うが、詳しくは調べていません。
ちなみに、 AA_MODELS とはなにかについては、 ここ に書かれてあるように、AcitveAndroidは全部のファイルの中からModelクラスを探しますが、AA_MODELSにModelクラスを明示的に指定することで処理を早くするために指定するものとのことです。</description></item><item><title>Android研究&amp;発表会#3 開催レポート</title><link>https://kwmt27.net/2019/12/06/android-research-and-presentation-3/</link><pubDate>Fri, 06 Dec 2019 20:25:00 +0900</pubDate><guid>https://kwmt27.net/2019/12/06/android-research-and-presentation-3/</guid><description>はじめに2019/11/30(土)にAndroid研究&amp;amp;発表会#3という勉強会を開催したので、レポートです。
今回は7名参加頂きました！これまで3回開催のうち一番多い人数です。 人数が多ければいいとは思ってませんが、興味を持ってくださり、一緒に勉強したい思ってくださる方が多いのはとてもうれしく思っています！ありがとうございますm(_ _)m
会場変更についてイベント公開時の会場を、3名ほど参加登録頂いたぐらいで、途中で会場を変更させていただきました。 理由としては、イベント公開後に、今回の会場をお借りしたakippa社の移転パーティーに参加させて頂いた時に、エンジニアの方が会場を使っていいとおっしゃってくださったので、お言葉に甘えてお借りすることにしたためです。 このことが影響したためかは不明ですが、当日1人の方が来られなくて、このことが原因であれば大変申し訳無いことをしたなと思いました。
勉強会の様子当日の勉強会の様子です。
まず、エントランスです。 完結でわかりやすい会場の案内を書いてくださってて、とても嬉しかったです！
おみやげの通りもんを持っていきました！ 無理やり感あったかもしれませんが、ぜんぶ食べて頂きました。
Kotlin Coroutines ことはじめ14:30から10分ほど会場案内と、この勉強会についてを軽く説明したあと、早速最初の発表として「Kotlin Coroutines ことはじめ」というタイトルで約30分ほど発表頂きました。
資料はこちらを参照ください。Coroutineの基本と仕組みが、わかりやすい図と一緒に説明いただき、理解が深まりました。
会場の雰囲気はこんな感じでした。
Jetpack compose をちょっと触ってみた次に、「Jetpack compose をちょっと触ってみた」というタイトルで発表頂きました。
こちらの方は当初Motion Layoutについての予定だったので、褒めタイムのときに「Motion Layout楽しみにしてた」というご意見も頂いたりもしました。ちなみに僕も楽しみにしてましたｗ
Android本体の開発について申し込み時点では発表予定なかったのですが、当日の10時ぐらいから資料を作り始めたらしく、飛び込みで発表してくださいました。
Androidのコアな話が聞けて、とても勉強になりました。
ということで、飛び込みLT大歓迎です！
Retrofit2の仕組み 〜CallAdapterを理解する〜最後は僕の発表です。RetrofitというライブラリのCallAdapterについて発表しました。
懇親会今回はconnpassで懇親会参加のアンケートをとっていたため、ぼくの独断でえんやという焼き鳥屋さんを予約してました。 参加予定の方のご都合が悪くなったみたいで、人数が大幅に減りそうでしたが、なんとか懇親できました！
ただ、全員知っているという状況でしたがｗ
次回次回は第4回になりますが、12月末はやはり年末で参加者も少ないだろうと予想されるので、2020/01/25(土)を予定しております。 イベント(connpass)は後ほど、#arap_osakaでお知らせしたいと思います。
最後に発表頂いた後、褒めタイムというのを設けているのですが、今回もいろいろ褒めたり質問がたくさんでたので、よかったかなと思います。
今回は合計参加人数が7名で、初めて参加の方が4名、発表してくださった方が3名、過去に参加くださった方が1名という感じでした。 その中で、ほんとにはじめましての方は1名でほかは面識ありでした。 仲間うち感をできるだけ出さないようにしようとしたんですが、少し難しかったかもしれません。。
また、勉強会に関するフィードバックを頂きました。
connpassの説明では対象者がわかりにくい これは参加者だけでなく発表者からも言われたフィードバックでした。参加者はAndroid初学者の方からでしたが、全体を通して発表が難しかった（中・上級者向け）ので、実際どこをターゲットにしているかというような内容でした。 発表者からは、資料を準備する際にどのレベルでは説明すればいいか迷ったとのことでした。 これをうけて、もう少しイベント説明内容を見直そうと思います。 会場変更前の会場だったから応募したというのもある すみません、気をつけます。。 「研究」という言葉に引っかかる Wikipediaによると「研究とは、ある特定の物事について、人間の知識を集めて考察し、実験、観察、調査などを通して調べて、その物事についての事実を深く追求する一連の過程のことである。」とのことで、深く追求したいという思いがありますのでこの言葉を使いましたが、ちょっと安易に考えた言葉でもあるので、見直してもいいかもしれません。 勉強会の主催って難しいなぁと思いつつ、また続けてほしいとのお言葉もあり、楽しく続けていきたいと思います。
会場をお借りしましたakippa様ありがとうございました！</description></item><item><title>Android研究&amp;発表会#2 開催レポート</title><link>https://kwmt27.net/2019/12/06/android-research-and-presentation-2/</link><pubDate>Fri, 06 Dec 2019 20:00:00 +0900</pubDate><guid>https://kwmt27.net/2019/12/06/android-research-and-presentation-2/</guid><description>はじめに2019/10/26(土)にAndroid研究&amp;amp;発表会#2というAndroidの勉強会を開催したので、レポートです。
勉強会の様子今回は主催の僕1名と参加者1名の合計2名で開催しました。 で、発表者が僕だけでしたので、参加者1名の方に発表するシュールなスタイルとなりましたw
雰囲気です。 僕の発表資料はこちらです。
途中からモクモク会に変更お気づきかもしれませんが、発表がだいたい20分ぐらいで終わりましたので、もちろん時間が余ります。 そこで何したかっていうと、モクモク会に切り替えました。 事前にconnpass上から、「時間余ったらモクモク会するので、ノートPC持ってきて下さい」と連絡させていただいてて、持ってきて頂いてたのでもくもく会に変更できました。
もくもく会の進め方としては、まずどんなことをもくもくするかいいあって、時間が経ったら最後にどうだったか成果のようなものを軽く発表するという形にしました。これは以前モクモク会だけのイベントをしたときにやってたことでした。
1人の参加者がやっていたことは、Android端末からラズパイだったかな？ちょっと忘れましたが、そういった端末にBloothoothでファイル送信して、送信したら通知がでるのを検知してアプリ上でダイアログとかを出したいとのことでした。
やられてることも興味深かったのですが、通知領域にくる通知を自分のアプリでしることができるというのをしらなかったので、勉強になりました。 ついでにサンプル作ってみたので、ご興味ある方は見てみてください。
僕の方は、 Kotlin Multiplatform project(MPP)でAndroidアプリを作っていたので、その続きをしてました。 MPPはAndroidアプリにGoogleMapを表示して、サーバーにあるストアを表示する簡単なものです。 サーバーはKtorを使っています。今回はマップにストアが表示されない不具合中だったので、その改修をしていました。
最後に今回は懇親会はありませんでした。 3回目もすでに終わった状態でこのレポートをかいているので、特に次回の連絡はありませんが、参加者2人以上でいれば開催していきたいと思っていますので、勉強したい方、一緒に勉強しませんか？！</description></item><item><title>Android研究&amp;発表会#1 開催レポート</title><link>https://kwmt27.net/2019/10/20/android-research-and-presentation-1/</link><pubDate>Sun, 20 Oct 2019 20:25:00 +0900</pubDate><guid>https://kwmt27.net/2019/10/20/android-research-and-presentation-1/</guid><description>はじめにだいぶ時間が経ってしまいましたが、Android研究&amp;amp;発表会#1 開催レポートを書いておきたいと思います。
初の発表スタイルの勉強会を主催2019/09/28(土)にAndroid研究&amp;amp;発表会 #1という勉強会を開催しました。
いままでモバもく会などのもくもく会という形では主催したことありますが、発表形式での勉強会を主催したのは今回が初めてです。
なぜ主催しようと思ったのかとかは、connpassに記載しているので、ここでは実際勉強会がどんな感じだったかを書きます。
参加人数としては、発表してくださる方が3人、聞きに来てくださった方が2人の合計5人です。
全体的な写真 勉強会の様子14:00に開場、14:20から会場説明の予定でしたが、14時過ぎには全員来てくださいまして、待っててもしょうがないので勉強会をスタートさせました。
画像が全体が入ってないし、荒いのですが会場案内とこの勉強会について説明しているところがこんな感じです。
毎月月末の土曜日に開催していきたいという話しをしているところあたりです。12月は28日だからめっちゃ月末やん、まぁ忘年会も一緒にやれたらいいかもですね、とかいう会話も混ざったりして、なごやかな雰囲気でした。
続いて、僕のLifecycleについて発表しました。その時の写真ですが、ぜんぜん写ってない・・・。時間的には40分話しました。
会場説明と発表が続いたので、休憩をいれました。
そのあと、パフォーマンス・チューニングの話をしてくださいました。 時間は20分ちょうどでしたね。
続いて、組み込みAndroidの話です。20分予定がだいぶオーバーして1時間喋ってましたねｗ
Android Thingsを持ってきて実演してくださったりもしました。
時間については短くなったりオーバーしたりしてもいいとは言ったものもの、ある程度調整は必要かと思いましたw
これでだいたい17:30ぐらいで、最初はだいぶ時間があまるんじゃないかとドキドキしていましたが、思いのほかいい感じの時間になったので、勉強会は終了して、ご飯いけるひとだけ行きました。
そのときのビールの写真ですｗこれしかなかった。。。
感想という感じで、発表してくださる方もいらっしゃったし、懇親会もできて一旦成功と言っていいかなと思っています。
初回なのに僕以外の人が発表してくださるのがとても嬉しかったです。
やはり褒めるのはなかなかはずかしいのか、そんなに褒めることはなかったように思いますが、少人数だからというのもあるのでしょうが、質問がたくさん出たのはとてもよかったと思いました。
次回第2回もやります！のでぜひ遊びにきて下さい。 発表枠が余ってます！w
Android研究&amp;amp;発表会 #2</description></item><item><title>Navigation Architecture ComponentでToolbarのバックボタンを非表示にするには</title><link>https://kwmt27.net/2019/10/11/how-to-remove-back-button-of-toolbar-with-navigation-component/</link><pubDate>Fri, 11 Oct 2019 16:40:00 +0900</pubDate><guid>https://kwmt27.net/2019/10/11/how-to-remove-back-button-of-toolbar-with-navigation-component/</guid><description>こちらを参照 https://stackoverflow.com/a/57169105/2520998
トップレベルのDestinationだったら非表示になるから、非表示にしたいDestinationをトップレベルに設定すればいい、とのこと。
こちらのサンプルを例にした場合、次のようにするとよさそう。</description></item><item><title>Android Lifecycle関連コンポーネントについて</title><link>https://kwmt27.net/2019/09/19/android-lifecycle-codelab/</link><pubDate>Thu, 19 Sep 2019 21:10:00 +0900</pubDate><guid>https://kwmt27.net/2019/09/19/android-lifecycle-codelab/</guid><description>はじめにAndroid Lifecycleのコードラボをやりつつ、ViewModelやLiveDataの仕組みを調べたのでメモしておこと思います。
https://codelabs.developers.google.com/codelabs/android-lifecycles
コードラボのコードベースでいろいろ試したソースはこちら
https://github.com/kwmt/android-lifecycles
Step1,2 ViewModelstep1はアプリが起動したらタイマーがカウントアップし、画面回転するとタイマーのカウントがクリアされてしまう、という問題にViewModelというものを使ってどう対処するのかという話です。
ViewModelとはViewModelを使えば、ActivityやFragmentのライフサイクル全体でデータを保持できます。 ActivityやFragmentは、ユーザーの操作でCreatedとDestroyedを繰り返す生存期間の短いオブジェクトです。
ViewModelクラスを作成するには、ViewModel()を継承します。（中身は空っぽですが）
class ChronoViewModel: ViewModel() { } ViewModelは、ViewModelインスタンスが破棄されるときに呼ばれるonClearedというメソッドを持っています。
ViewModelインスタンスの取得方法このViewModelインスタンスをActivityやFragmentで取得するには、
private val viewModel by viewModels&amp;lt;ChronoViewModel&amp;gt;() のようにKotlin property delegateを使って取得するか、
viewModel = ViewModelProvider(this).get(ChronoViewModel::class.java) このように取得することになります。
以前は、ViewModelProvider.of(activity)のように取得していましたが、lifecycleのバージョン2.2.0-alpha03からDeprecatedになっていました。 https://developer.android.com/jetpack/androidx/releases/lifecycle#2.2.0-alpha03
また、kotlin propertey Delegationを使うにはfragment-ktxの1.1.0以上を使う必要があります。
implementation &amp;#34;androidx.fragment:fragment-ktx:1.1.0&amp;#34; https://developer.android.com/jetpack/androidx/releases/fragment#1.1.0
ViewModelの生存期間ViewModelの生存期間はActivityやFragmentよりも長いです。 下図はActivityを起動して、画面を回転させ、バックボタンでアプリを終了したときの状態遷移です。
起動 onCreate viewModel created(正確にはLazyなのでアクセスしたタイミング) onStart onResume 回転 onPause onStop onDestroy onCreate onStart onResume バックボタンでアプリ終了 onPause onStop viewModel onCleared onDestroy 画面回転時に、ActivityはonDestroyされていますが、ViewModelはonClearedが呼ばれていません。
ViewModelの仕組みここで、
ViewModelがどのような仕組みで保持されているか 画面回転時にもonDestroyが呼ばれているにも関わらずonClearedは呼ばれず、アプリ終了時にのみonClearedが呼ばれている仕組み をみてみます。
1. ViewModelがどのような仕組みで保持されているかまず、Activityは
ChronoActivity -&amp;gt; AppCompatActivty -&amp;gt; FragmentActivity -&amp;gt; ComponentActivity -&amp;gt; Activity このような継承関係になっています。</description></item><item><title>KotlinのDelegateについて</title><link>https://kwmt27.net/2019/08/18/iosched-2019-kotlin-delegate/</link><pubDate>Sun, 18 Aug 2019 18:50:00 +0900</pubDate><guid>https://kwmt27.net/2019/08/18/iosched-2019-kotlin-delegate/</guid><description>はじめにGoogle I/O 2019のソースが公開されたのでさっそく読み始めたところ、下記のコードが気になった。 KotlinのDelegated propertyであることは知っていたが、あんまり詳しく知らなかったので、今回はDelegateについて調べてみたので、それについてのメモです。
override var onboardingCompleted by BooleanPreference(prefs, PREF_ONBOARDING, false) ちなみに、試したコードはこちらです。
https://github.com/kwmt/Kotlin-Playground/tree/master/src/main/kotlin/delegation
まずはDelegationの基本についてJavaでは処理をクラスに委譲するには次のようにやっていたと思います。(下記サンプルはJavaではないが、Javaで書くならこんな感じになる)
package delegation interface Nameble { var name: String } class JackName : Nameble { override var name: String = &amp;#34;Jack&amp;#34; } class Person(name: Nameble) : Nameble { override var name: String = name.name } fun main() { val person = Person(JackName()) println(person.name) } つまり、PersonクラスのnameをNamebleのnameに委譲したい場合、
override var name: String = name.name と書かないといけません。
しかし、kotlinのdelegationを使うと、次のように書けます。
package delegation interface Nameble { var name: String } class JackName : Nameble { override var name: String = &amp;#34;Jack&amp;#34; } class Person(name: Nameble) : Nameble by name fun main() { val person = Person(JackName()) println(person.</description></item><item><title>FlutterのAndroid Studio3.2.1対応したらエラーが出たので修正した</title><link>https://kwmt27.net/2018/10/27/flutter-android-gradle-plugin-3.2.1/</link><pubDate>Sat, 27 Oct 2018 16:15:00 +0900</pubDate><guid>https://kwmt27.net/2018/10/27/flutter-android-gradle-plugin-3.2.1/</guid><description>現象gradleプラグイン(android/build.gradle)のバージョンを3.2.1にしたら、
&amp;#39;Could not find lint-gradle-api.jar&amp;#39; と出て、Androidでビルドができなくなった。。
原因直接的な原因はFlutterがAndroid Stdio3.2に対応していないから。
対策FlutterSDKにある
flutter/packages/flutter_tools/gradle/flutter.gradle を開いて次のように変更するだけでよさそう。
index 390bb2deb..1e0f35c47 100644 --- a/packages/flutter_tools/gradle/flutter.gradle +++ b/packages/flutter_tools/gradle/flutter.gradle @@ -18,10 +18,8 @@ import org.gradle.api.tasks.bundling.Jar buildscript { repositories { + google() jcenter() - maven { - url &amp;#39;https://dl.google.com/dl/android/maven2&amp;#39; - } } dependencies { classpath &amp;#39;com.android.tools.build:gradle:3.1.2&amp;#39; あるいは、flutterリポジトリのmasterブランチは修正されているので、Flutter channelをmasterにするといいかもしれいない。
参考 関節的な原因: https://developer.android.com/studio/releases/#aapt2_gmaven</description></item><item><title>Androidのアプリ内課金のテスト購入して取り消すには？</title><link>https://kwmt27.net/2018/10/15/android-cancel-billiing/</link><pubDate>Mon, 15 Oct 2018 09:45:00 +0900</pubDate><guid>https://kwmt27.net/2018/10/15/android-cancel-billiing/</guid><description>問題Androidのアプリ内課金(定期購入ではない方)をテストしていて、一度購入して、再度購入テストしようとすると、 ITEM_ALREADY_OWNED とすでに購入済みというエラーが出て購入テストができません。
ちなみにここでのテスト購入時のプロダクトIDは、たとえばandroid.test.purchased です。 これで購入しようとすると、購入したとみなしてレスポンスを返してくれます。
対策で、本題ですが、購入を取り消すには次の手順で取り消すことができました。
アプリをアンインストール % adb shell pm clear com.android.vending を実行 注意アプリをアンインストールせずに、上記2番のコマンドを叩くだけだと、うまくいかないようです。
参考https://stackoverflow.com/a/30178861</description></item><item><title>Android Studio3.1のrecentProjects.xmlファイルのパス</title><link>https://kwmt27.net/2018/09/05/android-studio-recentprojects/</link><pubDate>Wed, 05 Sep 2018 19:45:00 +0900</pubDate><guid>https://kwmt27.net/2018/09/05/android-studio-recentprojects/</guid><description>最近なぜかAndroid StudioのFileメニューのOpen Recentから開くと、Android Studioが固まってしまうという現象に陥ってしまっています。
プロセスをkillして再起動してもダメで、recentから起動するとダメだからそのあたりを消してしまおうということで探した結果、下記にありました。
~/Library/Preferences/AndroidStudio3.1/options/recentProjects.xml このファイルを下記のような感じにして保存してAndroid Studioを開き直したら動いてくれました。
&amp;lt;application&amp;gt; &amp;lt;component name=&amp;#34;RecentProjectsManager&amp;#34;&amp;gt; &amp;lt;/component&amp;gt; &amp;lt;/application&amp;gt;</description></item><item><title>Wifiでadb接続する</title><link>https://kwmt27.net/2018/07/10/adb-wifi/</link><pubDate>Tue, 10 Jul 2018 21:30:00 +0900</pubDate><guid>https://kwmt27.net/2018/07/10/adb-wifi/</guid><description>Wifi経由でadb接続するには 端末とUSBで接続する
認識されてることを確認
% adb devices List of devices attached &amp;lt;端末&amp;gt; device adb tcpip PORTを叩く
% adb tcpip 5555 restarting in TCP mode port: 5555 adb serverがリスタートします。
adb connect &amp;lt;端末のIPアドレス&amp;gt; 端末に接続します。
% adb connect &amp;lt;端末のIPアドレス&amp;gt; connected to &amp;lt;端末のIPアドレス&amp;gt; このようにconnectedと出たら、完了です。USB外してもadb devicesで端末が表示されるはずです。
% adb devices List of devices attached &amp;lt;端末のIPアドレス&amp;gt;:5556 device もし adb connectできなかったらadb connectしたときに、下記のように接続できないことがありました。
% adb connect &amp;lt;端末のIPアドレス&amp;gt; unable to connect to &amp;lt;端末のIPアドレス&amp;gt;:5555: Operation timed out その場合は、PORTを変えてみてください。自分の場合はこれで繋がりました。
% adb tcpip 5556 restarting in TCP mode port: 5556 % adb connect &amp;lt;端末のIPアドレス&amp;gt;:5556 connected to &amp;lt;端末のIPアドレス&amp;gt;:5556</description></item><item><title>navigation-uiライブラリは、既存のアプリを置き換えることができないかもしれない</title><link>https://kwmt27.net/2018/06/09/umeda-apk/</link><pubDate>Sat, 09 Jun 2018 15:00:00 +0900</pubDate><guid>https://kwmt27.net/2018/06/09/umeda-apk/</guid><description>はじめにumeda.apk #4でLTした内容です。
スライドはこちらです。
スライドの概要navigation-uiライブラリというのがあって、Navigation Drawerとか使うのに超便利になったんですが、startDestination以外の画面に遷移すると、ハンバーガーアイコンが戻る矢印に変わってしまうので、微妙に使えないんじゃないかという話です。
戻る矢印に変わってしまうと、ユーザーは絶対気づかないやつだと思うし、既存のNavigation Drawerを使ったアプリを置き換えることができないと思うのですが、僕だけでしょうか。。。
もしこれが問題だと思う方は、このissueにスターやコメントして、改善してもらえるような方向になると、いいかなと思いますので、ぜひよろしくお願い致します。</description></item><item><title>Principles of Navigationの翻訳</title><link>https://kwmt27.net/2018/05/23/android-principles-of-navigation/</link><pubDate>Wed, 23 May 2018 10:00:00 +0900</pubDate><guid>https://kwmt27.net/2018/05/23/android-principles-of-navigation/</guid><description>はじめにPrinciples of Navigation(Navigationの原則)を一度読んでみたほうが良さそうと思って読んでみた時のメモというか翻訳です。
Principles of Navigation(Navigationの原則)アプリ内ナビゲーションの目標は、ユーザーに一貫した予測可能なエクスペリエンスを提供することです。この目標を達成するために、ナビゲーションアーキテクチャコンポーネントは、以下の各ナビゲーション原則に準拠したアプリを構築するのに役立ちます。
アプリは決まった最初の遷移先があるアプリにはユーザーがランチャーからアプリを起動したときに見る決まった遷移先の画面があります。この遷移先は、戻るボタンを押した後、ランチャーに戻るときの最後に表示される画面になるはずです。
注意: アプリに1回限りの設定や一連のログイン画面がある可能性があります。これらの条件付き画面は、アプリの最初の遷移先とみなすべきではありません。
スタックは、アプリの「ナビゲーション状態」を表すために使用アプリのナビゲーション状態は、LIFO(後入れ先出し構造)で表される必要があります。 この「ナビゲーションスタック」は、スタックの一番下にアプリの最初の遷移先があり、スタックの一番上に現在の遷移先があるはずです。
ナビゲーションスタックを変更する操作は、新しい遷移先をスタックの先頭に「プッシュ」するか、最上部の遷移先をスタックから「ポップ」することによって、常にナビゲーションスタックの一番上で操作する必要があります。
Upボタンはアプリを終了させないユーザーが最初の遷移先にいる場合は、Upボタンを表示すべきではありません。他のアプリのタスク上でディープリンクを使用してアプリを起動すると、Upボタンは階層的に親の遷移先に戻り、他のアプリに戻るべきではありません。
UpボタンとBackボタンはアプリのタスク内で同等自分のアプリのタスク上にいて最初の遷移先にいないときのような、システムのバックボタンがアプリを終了しない場合、Upボタンはシステムのバックボタンと同等に機能すべきです。
ディープリンクで遷移する場合や通所の遷移で同じ同じ遷移先への遷移する場合、同じスタック状態となるべきユーザーは最初の遷移先でアプリに入って、別の遷移先に遷移します。また同じ遷移先に遷移するために、可能ならディープリンクも使います。 両方のケースで、ナビゲーションスタックは遷移先が同じスタック状態になるべきです。 特に、ユーザーは、どのように遷移先に到達したかにかかわらず、バックボタンやUpボタンを使って、最初の遷移先まで戻れるべきです。 既存のナビゲーションスタックは削除され、ディープリンクのナビゲーションスタックに置き換えられます。
翻訳について Destination 遷移先 ※DestinationはNavigationにおいて、画面の意味があるので、遷移先の画面としてしまおうかと思ったり、Destinationのままにしようかと悩みましたが、遷移先に統一しました。 start destination 最初の遷移先 ※Navigationにおいて、アプリ起動時の画面を意味しています。また開始先のような訳も考えましたが、上記Destinationを遷移先としたので、最初の遷移先としました。 navigation stack ナビゲーションスタック</description></item><item><title>Android Oreoのプッシュ通知対応でハマった３つのこと</title><link>https://kwmt27.net/2018/04/21/push-notification-for-android-oreo/</link><pubDate>Sat, 21 Apr 2018 14:00:00 +0900</pubDate><guid>https://kwmt27.net/2018/04/21/push-notification-for-android-oreo/</guid><description>はじめに In the second half of 2018, Play will require that new apps and app updates target a recent Android API level.
引用元: https://android-developers.googleblog.com/2017/12/improving-app-security-and-performance.html
日本語訳: https://developers-jp.googleblog.com/2017/12/improving-app-security-and-performance.html
突然ですが、PlayStoreでアプリを公開するにあたり、ターゲットSDKバージョンを最新に指定することが義務化されることはご存知でしょうか。 新規アプリの公開で、2018年8月から、既存アプリのアップデートで2018年11月からAPIレベル26以降つまりAndroid 8.0オレオ以降の対応が必須になります。
今年の11月というと半年後ぐらいですので、オレオ対応はそろそろ開始し始めないと遅いかもしれません。
ということでオレオ対応をしていたのですが、そのときに僕がハマったことを３つのこと共有させていただきたいと思います。
話さないこととしては、
プッシュ通知の仕組みや実装の仕方 プッシュ通知の大切さ これらについては話しません。 プッシュ通知の大切さにつきましては、 去年9月のiOSDCで、「頼むからプッシュ通知の使い方をおろそかにしないでくれ！」(YouTube, スライド )というタイトルで発表されていて、とてもよい発表でしたのでぜひそちらを見て頂きたいです。
ハマった3つのことハマったこととは次の３つになります。
通知が来ない！ 通知アイコンが真っ白になった！ 通知をオフにしても通知が来る！ ひとつひとつ詳しく見ていきましょう。
そもそも通知が来ない！MarshmallowやNougatでは通知が来ていたのですが、targetSdkVersionをたとえば26にすると通知が来なくなりました。
どういうことかと言いますと、targetSdkVersionを26に設定すると、そのアプリはちゃんとOreo対応していますよ、と宣言したことになります。 通知をOreo対応するために必ず必要なことがあります。それは
all notifications must be assigned to a channel.
引用元: https://developer.android.com/training/notify-user/channels.html
すべての通知はチャンネルに割り当てなければなりません。
チャンネルというのは、例えばGoogle Play Musicアプリを参考しますと、下図の赤枠で囲んだ部分になります。
チャンネルごとに通知をON/OFFすることができたり、カラーやサウンドもチャンネルごとに設定できます。 同じアプリ内で、通知が来て欲しいチャンネルは通知をONにし、通知が不快だなと思うチャンネルだけを通知が来ないようにOFFできるという機能です。
これらのチャンネルは、targetSdkVersionを上げただけでは作成されません。 つまり、通知が来ない原因は、開発者がチャンネルを明示的に作成する必要があったのですが、ただバージョンを上げただけなので、チャンネルは作成されず通知が来なかったというわけです。
通知アイコンが真っ白になった！次にAndroid Oreoで通知アイコンが真っ白になるという現象に遭遇しました。下図の矢印のところです。
これをみたとき最初は、Lolipopから、アイコン画像の透過でない部分は白くレンダリングされるため、アイコン画像自体が対応していないのなかな？と思ったんですが、手元にあったMarshmallow端末で確認した所、ちゃんと表示されていたので、それは違いました。
いろいろ調べた所、Firebase SDK version11.</description></item><item><title>コマンドからエミュレータ閉じるには？</title><link>https://kwmt27.net/2018/03/29/kill-emulator-on-temrminal/</link><pubDate>Thu, 29 Mar 2018 16:20:00 +0900</pubDate><guid>https://kwmt27.net/2018/03/29/kill-emulator-on-temrminal/</guid><description>問題エミュレータを複数起動している途中でMacが落ちて再起動してしまった。 再起動後いろいろソフトが立上がるが、エミュレータは立ち上がらない（少なくとも見えない）現象になってしまった。
% adb devices List of devices attached emulator-5558 device emulator-5556 device emulator-5554 device adb devicesとするとこのように見えるのだが、実際はエミュレータは見えない。
対策コマンドからエミュレータを閉じるにはどうしたらいいか調べたところ、
adb -s emulator-5554 emu kill とすると
% adb devices List of devices attached と閉じてくれた。
以上。
参考 https://stackoverflow.com/a/20155436</description></item><item><title>Android Lint</title><link>https://kwmt27.net/2017/12/09/android-studio-lint-for-kotlin/</link><pubDate>Sat, 09 Dec 2017 16:25:00 +0900</pubDate><guid>https://kwmt27.net/2017/12/09/android-studio-lint-for-kotlin/</guid><description>コマンドラインからlintを実行するにはproject root で下記を実行します
./gradlew lint 特定のビルド バリアントに対してのみ lint タスクを実行するには
（例）
./gradlew lintDevelopDebug 設定IDリストを表示するには？% $ANDROID_HOME/tools/bin/lint --list Valid issue categories: Correctness Correctness:Messages Correctness:Chrome OS Security Performance Usability:Typography Usability:Icons Usability Accessibility Internationalization Internationalization:Bidirectional Text Valid issue id&amp;#39;s: &amp;#34;ContentDescription&amp;#34;: Image without contentDescription &amp;#34;AddJavascriptInterface&amp;#34;: addJavascriptInterface Called &amp;#34;ShortAlarm&amp;#34;: Short or Frequent Alarm &amp;#34;AllCaps&amp;#34;: Combining textAllCaps and markup &amp;#34;AllowAllHostnameVerifier&amp;#34;: Insecure HostnameVerifier &amp;#34;AlwaysShowAction&amp;#34;: Usage of showAsAction=always &amp;#34;InvalidUsesTagAttribute&amp;#34;: Invalid name attribute for uses element. &amp;#34;MissingIntentFilterForMediaSearch&amp;#34;: Missing intent-filter with action android.</description></item><item><title>Kotlin Style Guideメモ</title><link>https://kwmt27.net/2017/12/02/kotlin-style-guide/</link><pubDate>Sat, 02 Dec 2017 22:17:00 +0900</pubDate><guid>https://kwmt27.net/2017/12/02/kotlin-style-guide/</guid><description>https://android.github.io/kotlin-guides/style.html</description></item><item><title>Kotlin Conf Android Codeを読んだときのメモ</title><link>https://kwmt27.net/2017/12/01/read-kotlin-conf-android-app/</link><pubDate>Fri, 01 Dec 2017 14:30:00 +0900</pubDate><guid>https://kwmt27.net/2017/12/01/read-kotlin-conf-android-app/</guid><description># はじめに
Kotlin ConfのソースのAndroidを読みました。4時間ぐらいで読めた所までですが。
コードをおいやすくするために、Android Studio 3.0でプロジェクトを開きます。
kotlinconf-app/android/build.gradleを見るmaven { url &amp;#34;http://dl.bintray.com/kotlin/kotlin-eap-1.2&amp;#34; } まず、これが気になり調べたところ、Kotlinのアーリーアクセスプログラムのmavenリポジトリのようです。
bintrayには、
Builds of Kotlin released under the Early Access Program
このように書いてありました。
kotlinconf-app/android/app/build.gradleを見るappモジュールのbuild.gradleのdependeciesを見ると、全体がだいたいどんな感じのアプリか分かるかもなので、みてみます。
dependencies { compile fileTree(dir: &amp;#39;libs&amp;#39;, include: [&amp;#39;*.jar&amp;#39;]) compile &amp;#39;com.android.support:appcompat-v7:26.1.0&amp;#39; compile &amp;#39;com.android.support:recyclerview-v7:26.1.0&amp;#39; compile &amp;#39;com.android.support.constraint:constraint-layout:1.0.2&amp;#39; testCompile &amp;#39;junit:junit:4.12&amp;#39; androidTestCompile(&amp;#39;com.android.support.test.espresso:espresso-core:3.0.1&amp;#39;, { exclude group: &amp;#39;com.android.support&amp;#39;, module: &amp;#39;support-annotations&amp;#39; }) compile &amp;#39;com.android.support:design:26.1.0&amp;#39; compile&amp;#34;org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version&amp;#34; compile &amp;#34;android.arch.lifecycle:runtime:1.0.0&amp;#34; compile &amp;#34;android.arch.lifecycle:extensions:1.0.0-alpha9-1&amp;#34; kapt &amp;#34;android.arch.lifecycle:compiler:1.0.0-alpha9-1&amp;#34; compile &amp;#34;org.jetbrains.anko:anko-sdk25:$anko_version&amp;#34; compile &amp;#34;org.jetbrains.anko:anko-appcompat-v7:$anko_version&amp;#34; compile &amp;#34;org.jetbrains.anko:anko-recyclerview-v7:$anko_version&amp;#34; compile &amp;#34;org.jetbrains.anko:anko-commons:$anko_version&amp;#34; compile &amp;#34;org.jetbrains.anko:anko-design:$anko_version&amp;#34; compile &amp;#34;org.jetbrains.anko:anko-coroutines:$anko_version&amp;#34; compile &amp;#39;com.</description></item><item><title>Android Studio 2.3.3 から3.0にしたときのメモ</title><link>https://kwmt27.net/2017/11/02/migrate-android-studio2.0-to-3.0/</link><pubDate>Thu, 02 Nov 2017 00:07:00 +0900</pubDate><guid>https://kwmt27.net/2017/11/02/migrate-android-studio2.0-to-3.0/</guid><description>はじめに dependencies { - classpath &amp;#39;com.android.tools.build:gradle:2.3.3&amp;#39; + classpath &amp;#39;com.android.tools.build:gradle:3.0.0&amp;#39; classpath &amp;#34;org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version&amp;#34; と3.0.0にverupしたさいにエラーが出たのでその原因と対策をメモ
All flavors must now belong to a named flavor dimension.エラー内容app/build.gradle Error:All flavors must now belong to a named flavor dimension. Learn more at https://d.android.com/r/tools/flavorDimensions-missing-error-message.html
原因 The plugin now requires that all flavors belong to a named flavor dimension—even if you intend to use only a single dimension.
すべてのフレーバーに
対策 To resolve this error, you need to first declare one or more dimensions using the flavorDimensions property.</description></item><item><title>Kotlinプロジェクトで「Parameter specified as non-null is null: method kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull, parameter favicon」というエラーが出たときの対処法</title><link>https://kwmt27.net/2017/10/24/webview-error-with-kotlin/</link><pubDate>Tue, 24 Oct 2017 23:20:00 +0900</pubDate><guid>https://kwmt27.net/2017/10/24/webview-error-with-kotlin/</guid><description>現象Kotlin+DatabindingでViewModel側でwebview.loadURLをしてロードしようとしたら上記のエラーが出た。
E/AndroidRuntime: FATAL EXCEPTION: main Process: &amp;lt;package&amp;gt;, PID: 29932 java.lang.IllegalArgumentException: Parameter specified as non-null is null: method kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull, parameter favicon at &amp;lt;package&amp;gt;.HomeViewModel$setupWebView$webViewClient$1.onPageStarted(HomeViewModel.kt:0)at com.android.webview.chromium.WebViewContentsClientAdapter.onPageStarted(WebViewContentsClientAdapter.java:190) at org.chromium.android_webview.AwContentsClientCallbackHelper$MyHandler.handleMessage(AwContentsClientCallbackHelper.java:20) at android.os.Handler.dispatchMessage(Handler.java:102) at android.os.Looper.loop(Looper.java:148) at android.app.ActivityThread.main(ActivityThread.java:5417) at java.lang.reflect.Method.invoke(Native Method) at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726) at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616) 原因WebViewClientのonPageStartedメソッドの引数のBitmapのところが、favicon:Bitmap と、non-nullが指定されていたことだった。
対策override fun onPageStarted(view: WebView, url: String, favicon: Bitmap?) { Bitmap?をnull許容にしてあげればいい。
最後にある別プロジェクトからjavaソースをコピペして、Android Studioの自動変換機能にまかせてたので、大丈夫だろうと思っていたことで、気づくのに時間をとってしまった。。 よくエラー内容を見るとparameter faviconと書いてはいるんだけど、コピペしているからフレームワークの内部のことかと思ってしまって見過ごしていた。
Android Studioのkotlinへの自動変換を信じすぎないようにしよう。</description></item><item><title>Dagger2でProvidesアノテーションつけてないのに、なぜフィールド注入されるのか</title><link>https://kwmt27.net/2017/10/21/dagger2-subcomponent/</link><pubDate>Sat, 21 Oct 2017 21:00:00 +0900</pubDate><guid>https://kwmt27.net/2017/10/21/dagger2-subcomponent/</guid><description>Dagger2について分かってなかったことclass MainActivity : DaggerAppCompatActivity() { @Inject lateinit var viewModel: MainViewModel } MainActivityにviewModelを保持させてくて、@Injectアノテーションを付けてあげれば、インスタンスを注入してくれてる。
インスタンス注入するには、以下のような準備は必要です。
下記のようにActivityModuleとAppComonentを定義し、ActivityModuleをAppComponentの@Component(modules=ActivityModule::class)に指定します。
@Singleton @Component(modules = arrayOf( AndroidSupportInjectionModule::class, AppModule::class, ActivityModule::class ) ) interface AppComponent : AndroidInjector&amp;lt;App&amp;gt; { @Component.Builder interface Builder { @BindsInstance fun application(application: App): Builder fun build():AppComponent } } @Module abstract class ActivityModule { @ActivityScope @ContributesAndroidInjector internal abstract fun contributeMainActivity(): MainActivity } ActivityScopeも定義が必要だし、
@Scope @Retention(AnnotationRetention.RUNTIME) @MustBeDocumented annotation class ActivityScope AndroidManifest.xmlにAppを指定する必要がありますし、
&amp;lt;application android:name=&amp;#34;.App&amp;#34; そもそもAppは、Applicationを継承したクラスで、
open class App : DaggerApplication() { override fun applicationInjector(): AndroidInjector&amp;lt;out DaggerApplication&amp;gt; { return DaggerAppComponent.</description></item><item><title>Dagger2 + Android + ViewModel(with databinding)</title><link>https://kwmt27.net/2017/10/17/dagger2-android-viewmodel/</link><pubDate>Tue, 17 Oct 2017 10:00:00 +0900</pubDate><guid>https://kwmt27.net/2017/10/17/dagger2-android-viewmodel/</guid><description>はじめにdaggerバージョンが2.10になったときに、dagger.androidがリリースされたようで、いままでと少し書き方が変わっていたので、メモを書きました。
基本的に下記ページを参考にしています。
https://google.github.io/dagger/android.html
またサンプルコードは、Dagger 2.12 時点によるものです。
dagger.androidMainActivityが依存しているインスタンスを注入できるようにしてみます。
AndroidInjectionModule(あるいは、Support componentを使う場合は AndroidSupportInjectionModule)をアプリケーションコンポーネントに指定してください。
@Singleton @Component(modules = arrayOf( AndroidSupportInjectionModule::class ) ) interface AppComponent : AndroidInjector&amp;lt;App&amp;gt; { @Component.Builder interface Builder { @BindsInstance fun application(application: App): Builder fun build():AppComponent } } AndroidInjector.Builder&amp;lt;YourActivity&amp;gt;を継承している@Subcomponent.Builderを持つ AndroidInjector&amp;lt;YourActivity&amp;gt; を実装する@Subcomponent を作成します。
@Subcomponent interface MainActivitySubComponent:AndroidInjector&amp;lt;MainActivity&amp;gt; { @Subcomponent.Builder abstract class Builder : AndroidInjector.Builder&amp;lt;MainActivity&amp;gt;() } subcomponentを定義したら、Subcomponent.Builderをバインドするモジュールを定義(ここではMainActivityModule)し、
@Module(subcomponents = arrayOf(MainActivityModule.MainActivitySubComponent::class)) abstract class MainActivityModule { @Binds @IntoMap @ActivityKey(MainActivity::class) internal abstract fun bindAndroidInjectorFactory( builder: MainActivityModule.MainActivitySubComponent.Builder): AndroidInjector.Factory&amp;lt;out Activity&amp;gt; } そのモジュール(MainActivityModule)をアプリケーションコンポーネント(ここではAppComponent)に追加します。</description></item><item><title>モバもく会 #2 を開催して、Github Trending(java)を軽く読んでみた</title><link>https://kwmt27.net/2017/07/30/mobile-mockmock-2/</link><pubDate>Sun, 30 Jul 2017 18:00:00 +0900</pubDate><guid>https://kwmt27.net/2017/07/30/mobile-mockmock-2/</guid><description>はじめにモバもく会 #2という、モバイルに関連したもくもく会を開催しました。
一人は前回来ていただいた方の話を聞いて行ってみようと思って来てくださったり、 東京中心に活動されてる方がたまたま大阪に来ていて、大阪の宿泊している場所ではやりにくいので、参加してくださったり、 家にいるとスプラトゥーンをやってしまうから、こういうもくもく会はありがたいというお声を頂き、嬉しい限りです。
モバもく会としては、途中で帰られる方がいらっしゃったのでせっかく足を運んで来てくださってるので、帰られる方の話も聞きたいし、その方に対しても何かしら持ち帰ってほしかったので、途中で発表し合うようにしました。
今回みなさんがやったことは次のとおりです。
一人は次の勉強会のための資料作成(マテリアルデザイン) 一人も次の勉強会のための資料作成（Notificationに関すること） 一人はVR 一人はお仕事でMonakcaについての調査 僕は、前回に引き続き、2017/07/30の時点のGithub Trending(java)の中から2つレポジトリを見てみました。
下記は除外しています。
SmartRefreshLayoutは前回よんだので除外 android-interview-questions spring-boot StormPlanehttps://github.com/HurTeng/StormPlane
飛行機のゲームです。apkをAndroid端末にインストールして遊んだだけですｗ 飛行機を動かすのに、飛行機をタッチしないといけないのですが、指が邪魔で飛行機が全然見えなくて、ちょっとやりにくかったです。
コードとしては、SurfaceViewを使ってゴリゴリ書いてるだけなので、僕にとって特にこれと言って新しいことはありませんでした。
あと、Readmeとかが中国語なのでGoogle翻訳に頼りました。
PLDroidShortVideohttps://github.com/pili-engineering/PLDroidShortVideo
snowアプリみたいなことができるライブラリのようです。
起動してスタンプを選択して、顔にカメラを向けると、
このようになり、保存できます。
あと動画も撮れるようですが、スタンプを入れたまま動画の作成は出来ませんでした。
これも中国語でした。
まとめ中国語のレポジトリがトレンドに入ってる来てるので、中国語も勉強しないといけないと思いましたが、よくよく考えると中国製のライブラリを実運用で使うことは無さそうなので、次からは中国製のライブラリはやめてみようかと思います。</description></item><item><title>モバもく会を開催して、Github Trendingを軽く読んでみた</title><link>https://kwmt27.net/2017/07/20/mobile-mockmock/</link><pubDate>Thu, 20 Jul 2017 22:00:00 +0900</pubDate><guid>https://kwmt27.net/2017/07/20/mobile-mockmock/</guid><description>はじめにモバもく会という、モバイルに関連したもくもく会を開催しました。 一人はOpenSourceにプルリクを投げたり、一人は読書をしていました。
僕は、2017/07/17の時点のTrending in open sourceのAndroidに関係ある上位３つのサンプルをうごかしてみたのですが、そのときのまとめです。(※android-interview-questionsは除外しています)
https://github.com/trending/java?since=weekly
SmartRefreshLayouthttps://github.com/scwang90/SmartRefreshLayout
Pull to refreshのいい感じのライブラリです。 動きはReadmeに書かれてるので見てみてください。
基本的にはRecyclerViewをSmartRefreshLayoutで包めばよいだけのようです。
&amp;lt;android.support.v7.widget.Toolbar style=&amp;#34;@style/AppTheme.Toolbar&amp;#34; android:id=&amp;#34;@+id/toolbar&amp;#34; app:title=&amp;#34;@string/fragment_refresh_styles&amp;#34;/&amp;gt; &amp;lt;com.scwang.smartrefresh.layout.SmartRefreshLayout android:id=&amp;#34;@+id/refreshLayout&amp;#34; android:layout_width=&amp;#34;match_parent&amp;#34; android:layout_height=&amp;#34;match_parent&amp;#34; app:srlEnableLoadmore=&amp;#34;false&amp;#34; app:srlEnableHeaderTranslationContent=&amp;#34;true&amp;#34;&amp;gt; &amp;lt;android.support.v7.widget.RecyclerView android:id=&amp;#34;@+id/recyclerView&amp;#34; android:layout_width=&amp;#34;match_parent&amp;#34; android:layout_height=&amp;#34;match_parent&amp;#34; android:background=&amp;#34;@android:color/white&amp;#34; tools:listitem=&amp;#34;@android:layout/simple_list_item_2&amp;#34;/&amp;gt; &amp;lt;/com.scwang.smartrefresh.layout.SmartRefreshLayout&amp;gt; サンプル動かしてみました。
「下拉可以刷新」などの中国語で書かれてるところを変更したいなぁと思ってソースを見てみました。
こちらを見る限り、おそらくmHeaderTextにセットすればいいのかなぁと思ってみてたら、mHeaderTextに外から自由にセットできるメソッドがないっぽい。。
public static String REFRESH_HEADER_PULLDOWN = &amp;#34;下拉可以刷新&amp;#34;; とpublic static Stringでfinalではなかったので、直接書き換えてみたところ、
index 2b056cd..fbdf4a7 100644 --- a/app/src/main/java/com/scwang/refreshlayout/fragment/RefreshStylesFragment.java +++ b/app/src/main/java/com/scwang/refreshlayout/fragment/RefreshStylesFragment.java @@ -85,6 +85,7 @@ public class RefreshStylesFragment extends Fragment implements AdapterView.OnIte @Override public void onViewCreated(View root, @Nullable Bundle savedInstanceState) { super.onViewCreated(root, savedInstanceState); + ClassicsHeader.</description></item><item><title>Google Developers Summit Tokyo 2016 | Android に行ってきた</title><link>https://kwmt27.net/2016/04/27/google-developers-summit/</link><pubDate>Wed, 27 Apr 2016 12:23:03 +0900</pubDate><guid>https://kwmt27.net/2016/04/27/google-developers-summit/</guid><description>はじめに4/25(月)は、Google Developers Summit Tokyo 2016に行ってきました。
まとめようかと思ったけど、この方の記事が超まとまってて、書くことが何もないので、こちらのリンクだけはらせて頂きます。まとめありがとうございます！ http://yuki312.blogspot.jp/2016/04/google-developers-summit-tokyo-2016.html?m=1
だけど、ぜんぶではないが自分もメモとってたので、わかりにくいけどメモをペタッと。
メモ7月から9月(第三四半期)に最終版 本日はPreview2のステージ
www.google.com/android/beta より登録 対象:Nexus6以降 http://www.sli.do/ 1656
江川さん複数バージョンの共存 applicationのファイル名を変更すればよいだけ。 なるべくtoolバージョンをあげて、targetSDKはあとであげることが可能 AS2.1 JDK8のインストール必須 Jack and Jill Jack and Jill Androidno新しいツールチェイン Jack:コンパイラ Jill:リンカ 特徴 classにする工程がない Android NはJackでコンパイルされている 問題 Preview時に実行 AS2.1 に関するフィードバッグ http://b.android.com &amp;quot;Android Studio Bug&amp;quot;, &amp;quot;Jack bug report&amp;quot;を選択して投稿 Android Studio BugだとAndroid Studio担当者にアサインされる。featureだとAS担当者にアサインされない可能性がある DEXについて dexInProcess デフォルトでtrue ひとつのVM メモリ不足対策 gradle.propertiesにorg.grdle jv シュリンク機能 不要メソッドを消去したい 接続中に特化したtパッケージの生成 例：複数端末接続していた場合、xxhdpiがいらない端末であれば、そのリソースを含まないようにデプロイする（Android Studio経由） Instant Run 下記のような場合、パフォーマンスが落ちる問題が起きる multiDexEnabled trueかつminSdkVersion 20の場合 Dexに含まれるメソッド数が本来の数より増える Jackと併用負荷 Android Emulator2 App Indexing支援 荒木さんAndroid N Preview4まではAPIが変わる可能性がある Preview4は24に変わる予定 過去の端末もプレビューできるようになる予定 マルチウィンドウ Picture in Picture(TV) TV限定フローティングウィンドウのようにぽこっと出る 二分割 自由形式 OEMのボードによる リサイズ問題 新しいAPIはない。これまで通り。best practiceに従っている限り綺麗に表示されるハズ リサイズ ライフサイクル これまで通り リサイズはこれまでの画面回転と一緒。 active ON onResumeが呼ばれている active OFF onPauseが呼ばれてとまってる 動画上で、twitterが下した場合 onPauseで動画を止めてはだめ。onStopで止める。 既存のアプリはマルチウィンドウを許可されている状態になっている。 ただし、縦固定しているとマルチウィンドウにはならない。 マルチウィンドの判定のAPI追加 マルチウィンドウ切り替え 分割、自由形式は アプリから制御できない。右側の□ボタンを長押することだけしかできない 通知 直接返信 通知から直接返信できる グループ化 カスタムビュー setContentはdeprecated Java8 Android向けのJava8はJackでないとコンパイルできない ``` android{ jackOptions { enabled true } } ``` ラムダ button.</description></item><item><title>Androidプロジェクトの新規作成からプッシュ通知受信確認まで</title><link>https://kwmt27.net/2016/02/27/how-to-setting-push-notification-on-android/</link><pubDate>Sat, 27 Feb 2016 12:50:27 +0900</pubDate><guid>https://kwmt27.net/2016/02/27/how-to-setting-push-notification-on-android/</guid><description>はじめに1年ぐらい前にプッシュ通知を実装したときから設定方法が若干変わっていたので、この記事がいつまで有効かはわかりませんが、Androidプロジェクトの新規作成からプッシュ通知受信確認までを書いておこうと思います。
この記事を書いている時点で使用しているAndroid Studioのバージョンは1.5.1です。(AS2.0.0beta6が出ててバージョンアップしようか迷ってるという時期です。)
さて、最初にAndroid StudioでEmptyActivityを指定して、PushNotificationSampleという名前のNewProjectを作成しておきます。その前提で以下、話を進めていきます。
サンプルプロジェクトリポジトリ全体のプロジェクトはkwmt/PushNotificationSampleに置いています。
Configurationファイル(JSONファイル)を準備するAdd Google Services にアクセスして、Configuration fileを作成します。
作成したgoogle-services.jsonをapp/の直下に置きます。
※Flavor毎に異なったgoogle-services.jsonを使いたい場合は、 google-services:2.0.0-bata3からできそうという話があったが、実際動かないらしいので、betaとれるの待つしかなのかなぁ。
※google-services-gcmを追加したあと、gradleをsyncする時にgoogle-services.jsonファイルがないと下記のようなエラーが出ますのでご注意下さい。
Error:Execution failed for task &amp;#39;:app:processDebugGoogleServices&amp;#39;. &amp;gt; File google-services.json is missing from module root folder. The Google Services Plugin cannot function without it. build.gradleを編集google-servicesを追加するプロジェクトトップのbuild.gradleを編集します。--- a/build.gradle +++ b/build.gradle @@ -5,8 +5,9 @@ buildscript { jcenter() } dependencies { - classpath &amp;#39;com.android.tools.build:gradle:1.5.0&amp;#39; - + classpath &amp;#39;com.android.tools.build:gradle:2.0.0-beta6&amp;#39; + // https://develop ers.google.com/cloud-messaging/android/client + classpath &amp;#39;com.google.gms:google-services:2.0.0-beta6&amp;#39; // NOTE: Do not place your application dependencies here; they belong // in the individual module build.</description></item><item><title>Google I/O報告会 2015 参加メモ #devfest</title><link>https://kwmt27.net/index.php/2015/06/23/google-io-report-2015-memo-devfest/</link><pubDate>Tue, 23 Jun 2015 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2015/06/23/google-io-report-2015-memo-devfest/</guid><description>Google I/O報告会 2015(会場:サイバーエージェント(渋谷マークシティ13F)に行ってきました。
アジェンダが公開されてた
全体の流れメモ全体DevFestの歴史
2各会場の紹介
Keynote Androidはぬいて説明
会場MosconeWest
派手さな感じで楽しかった
すっごい寒かった
8回目SF
セッション数がヘリ、コミュニケーション重要視
Androidの話題が多い、デザイン多い
クラウド少ない→別のイベントになるんじゃないかと予想
Lobby公園のような感じ
コミュニケーションできるような。充電ステーションでみんあが集まて会話が生まれる感じ
exiii $300
おみやげはメインでなく、コミュニケーションメイン
キーノートはいま使える現実的な物。
DESIGN to DE$IGN デザインはビジネス
AndroidM developer previewの略？ｗ
指紋認証 Fingerprint
サンプルは github google
全データはデフォルトでバックアップされる
細かくも設定できる。
Doze
しばらくさわってない端末はdozeモード へ
App stanby
しばらくさわっていないアプリはidleモード
※しばらくはどれくらい？はわからない。
Icons in Notifications:Icon.createWidthBitmapで生成できる
Textの範囲指定
App Links
Webページとアプリとの関係性を明確にする。 自分のアプリが優先的に。 Sylus フラッシュだけを使うことがカメラを使わずにできるようになった。
AlphaOptimaization
いままでよりもいい感じで透明Viewを使える MIDIのAPI追加
ストレージ
ART:runtime stats
Ambient Mode
できるだCPU稼働率をゼロにするモード manifest WakerLockとWearable supportlibraryの２つが前提でsetAmibentEnabeledの一行だけ App Invite
紹介するときsetDeepLinkでインテント作って 紹介されたとき、リファラーがついてれればOK マニフェストにintentfilterを追加 App Indexing</description></item><item><title>Android Studioを1.0にバージョンアップしたら、Gradle DSL method not found: &amp;#8216;runProguard()&amp;#8217;って怒られた場合</title><link>https://kwmt27.net/index.php/2014/12/09/android-studio-1-0-gradle-dsl-method-not-found-runproguard/</link><pubDate>Tue, 09 Dec 2014 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2014/12/09/android-studio-1-0-gradle-dsl-method-not-found-runproguard/</guid><description>Android Studioがついに1.0になりましたね。ということでダウンロードして、起動したらgradleのバージョンを1.0.0にしろとかいろいろ怒られたんですが、そこらへんは自動で修正してくれたのに、下記のエラーは自動で修正してくれませんでしたのでメモ。
対応はrunProguardをminifyEnabledに変更します。
詳しくは、Migrating Gradle Projects to version 1.0.0 – Android Tools Project Site に記載してあります。</description></item><item><title>android wear appのインストール時の注意点</title><link>https://kwmt27.net/index.php/2014/11/19/notice_when_install_android_wearable_apps/</link><pubDate>Wed, 19 Nov 2014 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2014/11/19/notice_when_install_android_wearable_apps/</guid><description>開発時（といいますか、デバッグキーを使ってビルドしている時）は、携帯端末とWearable端末に別々にインストールしないと、携帯端末だけにインストールしても自動的にWearable端末にインストールされません。
リリースキーを使って署名している場合は、自動的にインストールされます。
参考Install the Wearable App</description></item><item><title>TwitterのFabric SDKをAndroid Studioで使ってみる</title><link>https://kwmt27.net/index.php/2014/11/10/how-to-use-twitter-fabric-sdk-with-android-studio/</link><pubDate>Mon, 10 Nov 2014 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2014/11/10/how-to-use-twitter-fabric-sdk-with-android-studio/</guid><description>&lt;h2 id="はじめに">はじめに&lt;a class="anchorjs-link" href="#%e3%81%af%e3%81%98%e3%82%81%e3%81%ab">&lt;/a>&lt;/h2>&lt;p>ひさびさTwitterをつかってアプリつくろうと思って&lt;!-- raw HTML omitted -->ディベロッパーサイト&lt;!-- raw HTML omitted -->に行ったら、fabric?????とか出てきてなんじゃこれ？と思って調べてたら、10/22(現地時間)に発表されたTwitterのモバイル向け新SDKとやららしい。&lt;/p>
&lt;blockquote>
&lt;p>&lt;!-- raw HTML omitted -->Twitter、モバイルアプリ向け新SDK「Fabric」発表　パスワード不要の次世代認証「Digits」リリース – ITmedia ニュース&lt;!-- raw HTML omitted -->&lt;/p>
&lt;/blockquote>
&lt;p>まぁ英語でもいいんだけど、日本語の情報ないかなぁと探してみたけど、全然ない(´・ω・`)&lt;/p>
&lt;p>ということで、Android StudioでFabric SDKのセットアップしてから、ツイートできるようになるまでを書いてみようと思います。&lt;/p>
&lt;h2 id="android版fabricの公式サイト">Android版Fabricの公式サイト&lt;a class="anchorjs-link" href="#android%e7%89%88fabric%e3%81%ae%e5%85%ac%e5%bc%8f%e3%82%b5%e3%82%a4%e3%83%88">&lt;/a>&lt;/h2>&lt;p>&lt;!-- raw HTML omitted -->&lt;a href="https://dev.twitter.com/twitter-kit/android" target="_blank">https://dev.twitter.com/twitter-kit/android&lt;/a>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="確認したバージョン">確認したバージョン&lt;a class="anchorjs-link" href="#%e7%a2%ba%e8%aa%8d%e3%81%97%e3%81%9f%e3%83%90%e3%83%bc%e3%82%b8%e3%83%a7%e3%83%b3">&lt;/a>&lt;/h2>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted --></description></item><item><title>Android StudiodでgreenDaoを使う</title><link>https://kwmt27.net/index.php/2014/09/17/how-to-use-greendao-library/</link><pubDate>Wed, 17 Sep 2014 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2014/09/17/how-to-use-greendao-library/</guid><description>&lt;h2 id="はじめに">はじめに&lt;a class="anchorjs-link" href="#%e3%81%af%e3%81%98%e3%82%81%e3%81%ab">&lt;/a>&lt;/h2>&lt;p>AndroidのORMライブラリについて調べてみてまして、ORMLite、Active Android、greenDaoが有名のようです。&lt;/p>
&lt;p>ORMLite、Active Androidは、アノテーションを使っていて、greenDaoは使っていません。&lt;/p>
&lt;p>アノテーションはリフレクションに依存しているため、特にAndroidデバイスにおいては、パフォーマンスに影響出ますので、greenDaoを使おうかと思います。(&lt;a href="https://kwmt27.net/#sanko">参考1&lt;/a>などをみますと、パフォーマンスにクリティカルに影響があるアプリでなければどれつかっても良さそうですが・・・）&lt;/p>
&lt;h2 id="使い方としては">使い方としては、&lt;a class="anchorjs-link" href="#%e4%bd%bf%e3%81%84%e6%96%b9%e3%81%a8%e3%81%97%e3%81%a6%e3%81%af">&lt;/a>&lt;/h2>&lt;p>２ステップ必要で、１ステップ目は、モデル定義しgreendao-generatorでコードを自動生成します。(普通のjava)&lt;/p>
&lt;p>２ステップ目として、自動生成したコードをAndroidに組み込みます。&lt;/p>
&lt;p>それで、自動生成するために新規にjavaプロジェクトを作る必要があると書いてある参考サイトが多くて、確かにそれでもいいのですが、別プロジェクトを作るのが面倒くさいし、プロジェクトが別なので管理がバラバラになりそうなので、なんとかしてのプロジェクトで出来ないか調べていた所、ちょ～分かりやすく書いて下さっていたサイトがありましたので、リンク張らせて頂きます。&lt;/p></description></item><item><title>【Android】【WebView】Cookieの有効期限が切れた場合にどうなるか確認する</title><link>https://kwmt27.net/index.php/2014/07/16/check-cookie-if-expire/</link><pubDate>Wed, 16 Jul 2014 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2014/07/16/check-cookie-if-expire/</guid><description/></item><item><title>2つのアクティビティ間のアニメーションに3Dトランジションを適用する</title><link>https://kwmt27.net/index.php/2014/07/16/2%E3%81%A4%E3%81%AE%E3%82%A2%E3%82%AF%E3%83%86%E3%82%A3%E3%83%93%E3%83%86%E3%82%A3%E9%96%93%E3%81%AE%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AB3d%E3%83%88%E3%83%A9/</link><pubDate>Wed, 16 Jul 2014 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2014/07/16/2%E3%81%A4%E3%81%AE%E3%82%A2%E3%82%AF%E3%83%86%E3%82%A3%E3%83%93%E3%83%86%E3%82%A3%E9%96%93%E3%81%AE%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AB3d%E3%83%88%E3%83%A9/</guid><description>下記が大いに参考になるが、めちゃめちゃ重い。
animation – How to apply 3d transition between two activities in android? – Stack Overflow</description></item><item><title>Androidプロジェクトを新規作成してVolleyが使えるようになるまで</title><link>https://kwmt27.net/index.php/2014/07/10/how-to-use-volley-library/</link><pubDate>Thu, 10 Jul 2014 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2014/07/10/how-to-use-volley-library/</guid><description>&lt;p>サンプルプロジェクトは、&lt;!-- raw HTML omitted -->github&lt;!-- raw HTML omitted -->におきました。&lt;/p>
&lt;h2 id="androidプロジェクトを新規作成する">Androidプロジェクトを新規作成する&lt;a class="anchorjs-link" href="#android%e3%83%97%e3%83%ad%e3%82%b8%e3%82%a7%e3%82%af%e3%83%88%e3%82%92%e6%96%b0%e8%a6%8f%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b">&lt;/a>&lt;/h2>&lt;p>Android StudioでNew Projectを作成する (例プロジェクト名：VolleySample)&lt;/p>
&lt;h2 id="volleyプロジェクトを追加する">volleyプロジェクトを追加する&lt;a class="anchorjs-link" href="#volley%e3%83%97%e3%83%ad%e3%82%b8%e3%82%a7%e3%82%af%e3%83%88%e3%82%92%e8%bf%bd%e5%8a%a0%e3%81%99%e3%82%8b">&lt;/a>&lt;/h2>&lt;p>volleyプロジェクトを作成したAndroidプロジェクトにsubmoduleとして追加・設定する&lt;/p>
&lt;p>1.作成したプロジェクトに移動してgit init&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>2.必要なら.gitignoreに追加してコミット
3.volleyプロジェクトを追加する&lt;/p></description></item><item><title>Android Stuio(0.5.7)でNavigation Drawerでエラーになる。</title><link>https://kwmt27.net/index.php/2014/05/05/android-studio-navigationdrawer/</link><pubDate>Mon, 05 May 2014 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2014/05/05/android-studio-navigationdrawer/</guid><description>Android Studio(0.5.7)でNavigation DrawerをNew Projectしたら、getFragmentManager()のところで、Fragmentを継承したNavigationDrawerFragmentにキャストできないってエラーが出たので、その原因と対策です。
[Android Studio(0.5.7)でNavigation DrawerをNew Projectしたら、getFragmentManager()のところで、Fragmentを継承したNavigationDrawerFragmentにキャストできないってエラーが出たので、その原因と対策です。
]1
Looking for wrong fragment class with Android compatibility library – Stack Overflow</description></item><item><title>Android Studio(0.5.7)のNew ProjectでTabbed Activityを選んだらエラーになる</title><link>https://kwmt27.net/index.php/2014/05/03/android-studio-tabbed-activity-error/</link><pubDate>Sat, 03 May 2014 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2014/05/03/android-studio-tabbed-activity-error/</guid><description>Android StudioのNew ProjectでTabbed Activityを選んだらいきなり下のエラーが出て困った。
このエラーから検索していったらハマった。stack overflowとかではaaptのバグだよとか書かれてるし、しょうがないのかなぁとか思ってて、よくよく考えると、MainActivityはActionBarActivityを継承しているのですが、ただ単にActionBarActivityがみつからないって言われてただけでした。
つまり、import android.support.v7.app.ActionBarActivity;を追加する。ただし、最初のプロジェクトの自動生成では、support.v7ライブラリは追加されていないので、FileメニューからProject Structure(⌘;)から、Dependenciesタブを選択し、下部の+からcom.android.support:appcompat-v7を追加する
これでActionBarActivityのエラーは消えるのですが、Runすると、
のようなエラーが出るので、AndroidManifest.xmlのthemeの部分を
に変更する。これで無事起動した。</description></item><item><title>【Android】久しぶりにAndroidアプリった。</title><link>https://kwmt27.net/index.php/2013/03/11/android%E4%B9%85%E3%81%97%E3%81%B6%E3%82%8A%E3%81%ABandroid%E3%82%A2%E3%83%97%E3%83%AA%E3%81%A3%E3%81%9F/</link><pubDate>Mon, 11 Mar 2013 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2013/03/11/android%E4%B9%85%E3%81%97%E3%81%B6%E3%82%8A%E3%81%ABandroid%E3%82%A2%E3%83%97%E3%83%AA%E3%81%A3%E3%81%9F/</guid><description>201302-03でやったキーワード
久しぶりにAndroidアプリった。こんなに真剣にやったのはたぶん1年ぶりぐらい。
ググったら日本語の情報がわんさか出てきたことに感動。
ということで、基本的にはググればわかるので、ここでは今回やったキーワードだけ残しておくメモです。
トグルボタンを使うには？ OnCheckedChangeListener　をimplementsして、以下のonCheckedChangedをoverride
// OnCheckedChangeListenerをimplementした時に実装が必要なメソッド // トグルボタン用 @Override public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) { if (isChecked){ //ON } else{ //OFF } } プリファレンスは？ 音声認識させるには？標準ダイアログが出る 標準ダイアログを出さない ※以下のパーミッションが必要
※ダイアログは出ないが、ピコっていう音はなる。
一定間隔で処理するには？ ウィジェットを実装するには？ このとき、マニフェストファイルにこんな感じ書いとく
&amp;lt;receiver&amp;gt; android:name=&amp;#34;.WidgetProvider&amp;#34; android:label=&amp;#34;@string/app_name&amp;#34; &amp;gt; &amp;lt;intent-filter&amp;gt; &amp;lt;action android:name=&amp;#34;android.appwidget.action.APPWIDGET_UPDATE&amp;#34; /&amp;gt; &amp;lt;/intent-filter&amp;gt; &amp;lt;meta-data android:name=&amp;#34;android.appwidget.provider&amp;#34; android:resource=&amp;#34;@xml/widget_provider&amp;#34; /&amp;gt; &amp;lt;/receiver&amp;gt; &amp;lt;service android:name=&amp;#34;.WidgetService&amp;#34; &amp;gt; &amp;lt;intent-filter&amp;gt; &amp;lt;action android:name=&amp;#34;com.example.myproject.HOGEHOGE&amp;#34;/&amp;gt; &amp;lt;/intent-filter&amp;gt; &amp;lt;/service&amp;gt; サービスタグの は、ウィジェットに対してクリックイベントを取りたいときに必要。
作成中の自分のプロジェクト（myproject）の中で自分でHOGEHOGEを定義しておき、「HOGEHOGEになったら、ある処理をする」という具合に実装する。
画像を繰り返すには？ 最後に上記をキーワードにググれば分かるはず。と自分に言い残してみる。
参考にしたURLをメモってれば良かったけど、まぁいっか。</description></item><item><title>docomo WiFiの設定内容確認方法</title><link>https://kwmt27.net/index.php/2013/01/06/docomo-wifi%E3%81%AE%E8%A8%AD%E5%AE%9A%E5%86%85%E5%AE%B9%E7%A2%BA%E8%AA%8D%E6%96%B9%E6%B3%95/</link><pubDate>Sun, 06 Jan 2013 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2013/01/06/docomo-wifi%E3%81%AE%E8%A8%AD%E5%AE%9A%E5%86%85%E5%AE%B9%E7%A2%BA%E8%AA%8D%E6%96%B9%E6%B3%95/</guid><description>docomo Wi-Fiを使おうと思ってdocomo Wi-FiユーザIDとdocomo Wi-Fiパスワードを確認しよう思って探してたら、分かりにくすぎてイライラしたので、メモった。
spモードメールアプリを起動
⇣
メール設定
⇣
その他
⇣
Wi-Fiオプション利用設定→Wi-Fiメール設定
⇣
認証画面で、spモードパスワード(数字4桁)を入力
⇣
Wi-Fi設定画面に行くが、ここで一番下にある「&amp;lt;各種設定」をタップする
⇣
「spモード各種設定」画面に行くので、「docomo Wi-Fi設定」をタップする
⇣
「&amp;gt;確認」をタップ
⇣
認証画面で、spモードパスワード(数字4桁)を入力
⇣
確認画面で下記の項目を確認することができる
docomo Wi-FiユーザID docomo Wi-Fiパスワード SSID WEPキー dメニューと書いてあったので、dメニューからいこうしたけど、深すぎて余計分からなかったorz</description></item><item><title>Galaxy Note（SC-05D）を購入したよ。</title><link>https://kwmt27.net/index.php/2012/05/01/galaxy-notesc-05d%E3%82%92%E8%B3%BC%E5%85%A5%E3%81%97%E3%81%9F%E3%82%88/</link><pubDate>Tue, 01 May 2012 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2012/05/01/galaxy-notesc-05d%E3%82%92%E8%B3%BC%E5%85%A5%E3%81%97%E3%81%9F%E3%82%88/</guid><description>Galaxy Noteの写真集遅ればせながら、Galaxy Note（SC-05D）を購入したので写真撮影ｖ
&amp;lt;dd&amp;gt; Galaxy Note 箱の表 &amp;lt;/dd&amp;gt; &amp;lt;dd&amp;gt; Galaxy Note 箱の裏 &amp;lt;/dd&amp;gt; &amp;lt;dd&amp;gt; Galaxy Note 箱の側面 &amp;lt;/dd&amp;gt; &amp;lt;dd&amp;gt; Galaxy Note 表1 &amp;lt;/dd&amp;gt; &amp;lt;dd&amp;gt; Galaxy Note 表2 &amp;lt;/dd&amp;gt; &amp;lt;dd&amp;gt; Galaxy Note 裏 &amp;lt;/dd&amp;gt; &amp;lt;dd&amp;gt; Galaxy Note 付属品 &amp;lt;/dd&amp;gt; 動画も少し撮影。Galaxy Sの起動より”S”になるまでがなめらかな印象。
次の動画は、カバーをかけたときどんな感じかの動画
次は、ペンを使ったらどんな感じかの動画
気になる値段以下は、2012/4/30にLABI三宮店で、ソフトバンクの携帯からドコモに乗り換えたときの値段になります。
解約金
ソフトバンク携帯（DesireⅡ）の解約金：25455円
内訳：現時点で1年6ヶ月で今解約すると、機種代金の残りが2580円×6ヶ月、それに解約金9975円をプラスして25455円。
（基本料金（980円）が入ってないのは、もちろん解約するから、基本料金はかからない。）
機種代金
Galaxy Noteの機種代金：66360円
MNP乗り換え割引：ー35000円※1
Docomoポイント：ー6825円 (6500ポイント*1.05（諸費税？※2））
合計：24535円
毎月の支払
基本料金：780円（タイプXi にねん）※3
パケット：2100円（Xiパケホーダイダブル）
月々サポート：ー4095円（2年間で98280円割引）
合計：ー1215円
つまり、初期投資：25455円（解約金）＋24535円（機種代）＝49990円で毎月の支払0円（ちょっとだけ通話もできる！）。なんかめっちゃ得した気分。
おわりに最後に、解約しなかったら、現状2580円(分割の機種代)と980円(基本料金) で合計 3560 円を毎月支払うことになる。
解約金を払わず使わない携帯をもったまま基本料金を払い続けるか、解約金を払ってこれから使うであろう携帯にMNPするかは、”今”を考えるともったいない気もしたけど、今後のことを考えると、使う携帯にお金を払ったほうが価値があると考えた。（普通？）
※1：LABI三宮店では、4/30に行ったときは「25000円」と書いていた。実は先週（4/22)行ったときは「30000円」だったので、1週間で5000円も下がって購入を迷っていたけど、店員さんに「先週30000円割引だったんですよね〜」って言ったら、タイムセールで30000円になっていたとのこと。最高35000円割引までなっていたらしいのです。それを聞いてさらにどうしようか迷ったけど、まぁ買っちゃえということで、手続きに入ってしばらくしたら、店員さんが「割引35000円まで行けるそうです」と教えてくれた。僕はこれで35000円まで割り引いてくれたけど、他にMNPした人はどうなんだろう。25000円割引のままだったのか少々気になるところ。もし、LABI三宮でMNPする場合は、言ってみるといいかもしれない。
※2：この1.05って消費税？割引が増える方向だからラッキーと思って聞くの忘れた。。。
※3：このタイプXi にねんにして、2年以内に解約する場合は、解約金9975円がかかる。解約金がかからないタイプXiという1560円/月のプランもあるが、これにすると毎月の基本料金がタイプXi にねんの780円/月のプランの2倍になり、さらにMNP割引（35000円）を付けることができなくなるとのこと。解約時に解約金を払わないといけないというなんというか気持ち的に微妙だが、月々が安くなってMNP割引もあるなら、780円/月を選ばない手はない。気持ち的には25025円割引（35000円-9975円）で解約金なしと考えればまぁいいか。</description></item><item><title>WebAPIの使い方を勉強しました。</title><link>https://kwmt27.net/index.php/2012/03/03/webapi%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9%E3%82%92%E5%8B%89%E5%BC%B7%E3%81%97%E3%81%BE%E3%81%97%E3%81%9F/</link><pubDate>Sat, 03 Mar 2012 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2012/03/03/webapi%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9%E3%82%92%E5%8B%89%E5%BC%B7%E3%81%97%E3%81%BE%E3%81%97%E3%81%9F/</guid><description>夜子ままさんのスライドを参考にWebAPIを使ってJSONを取得し、解析してLogに表示するというのをやってみました。（ほとんどスライドの写経です）
違いは、スライドの例はGoogleMaps APIを使用していますが、Google+APIを使うようにしただけです。
ソースはgithubにあげました。</description></item><item><title>ABC2012 Spring 開催</title><link>https://kwmt27.net/index.php/2012/02/29/abc2012-spring-%E9%96%8B%E5%82%AC/</link><pubDate>Tue, 28 Feb 2012 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2012/02/29/abc2012-spring-%E9%96%8B%E5%82%AC/</guid><description>Android Bazaar Conference 2012 Springが3/24(土)に東京大学で開催されます。
GDDのスタッフが面白かったので、ABCもスタッフとして参加しますので、よろしくお願いします。
2月のエントリー、これだけになりそう。。。</description></item><item><title>Ubuntu 11.10 on VMware でICSビルド時のエラーと対策メモ</title><link>https://kwmt27.net/index.php/2011/11/26/ubuntu-11-10-on-vmware-%E3%81%A7ics%E3%83%93%E3%83%AB%E3%83%89%E6%99%82%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%A8%E5%AF%BE%E7%AD%96%E3%83%A1%E3%83%A2/</link><pubDate>Fri, 25 Nov 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/11/26/ubuntu-11-10-on-vmware-%E3%81%A7ics%E3%83%93%E3%83%AB%E3%83%89%E6%99%82%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%A8%E5%AF%BE%E7%AD%96%E3%83%A1%E3%83%A2/</guid><description>新しくVMwareをインストールして、Ubuntu11.10 日本語Remix CDイメージをダウンロードして、これを見ながらICSのビルド環境を構築して、makeしたときにエラーが出たのでエラーの内容と対策をメモります。
最初に出たエラー エラー内容 host C++: obbtool &amp;lt;= frameworks/base/tools/obbtool/Main.cpp :0:0: error: &amp;ldquo;_FORTIFY_SOURCE&amp;rdquo; redefined [-Werror] :0:0: note: this is the location of the previous definition cc1plus: all warnings being treated as errors make: *** [out/host/linux-x86/obj/EXECUTABLES/obbtool_intermediates/Main.o] Error 1 原因 ブランチandroid-4.0.1_r1をダウンロードしたから。 詳しくはこちら→
http://code.google.com/p/android/issues/detail?id=20795
対策 masterブランチをダウンロードした。 たしかに、core/combo/HOST_linux-x86.mkが
HOST_GLOBAL_CFLAGS += -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0
のように修正されてた。これだとうまくいくらしい。
参考 http://e-xiao.blogspot.com/2011/10/resolve-build-errors-for-android-234.html 次に出たエラー エラー内容 host Executable: adb (out/host/linux-x86/obj/EXECUTABLES/adb_intermediates/adb) host Executable: atree (out/host/linux-x86/obj/EXECUTABLES/atree_intermediates/atree)
host Executable: bb2sym (out/host/linux-x86/obj/EXECUTABLES/bb2sym_intermediates/bb2sym)
host Executable: bb_dump (out/host/linux-x86/obj/EXECUTABLES/bb_dump_intermediates/bb_dump)
/usr/bin/ld: cannot find -lncurses</description></item><item><title>Open Handset AllianceのFAQを訳してみた。</title><link>https://kwmt27.net/index.php/2011/10/11/open-handset-alliance%E3%81%AEfaq%E3%82%92%E8%A8%B3%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F/</link><pubDate>Tue, 11 Oct 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/10/11/open-handset-alliance%E3%81%AEfaq%E3%82%92%E8%A8%B3%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F/</guid><description>&lt;p>&lt;!-- raw HTML omitted -->Open Handset Alliance&lt;!-- raw HTML omitted -->が何をしているのかよく分からず、調べていると&lt;!-- raw HTML omitted -->FAQのページ&lt;!-- raw HTML omitted -->があったので訳してみました。&lt;/p></description></item><item><title>GDD 2011 DevQuiz Androidの問題のメモ</title><link>https://kwmt27.net/index.php/2011/09/14/gdd-2011-devquiz-android%E3%81%AE%E5%95%8F%E9%A1%8C%E3%81%AE%E3%83%A1%E3%83%A2/</link><pubDate>Tue, 13 Sep 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/09/14/gdd-2011-devquiz-android%E3%81%AE%E5%95%8F%E9%A1%8C%E3%81%AE%E3%83%A1%E3%83%A2/</guid><description>GDD 2011 のDevQuizに初めてチャレンジしました。
スライドパズルは・・・ですが、AndroidのAIDLの問題は解けたのでそれについて書きたいと思います。
問題の概要以下のAIDLで定義されているサービスを持つAndroid アプリケーションを配布します。
プログラム作って解答コードを取得してね。
※AIDL（Android Interface Definition Language）とは、IDLの一種で、プロセス間通信行うためのものです。
準備Androidプロジェクトを作成する。このとき、パッケージ名は配布アプリケーションと一緒じゃないといけない。
IQuizService.aidl ファイルをsrcに作成し、上のコードをコピペ。
配布されたAndroidアプリケーションを実機でも、エミュレータでもいいからインストールしたら、
メールアドレスとパスワードを入れる欄があったので、入力する。
メールアドレスはGDD 2011に登録したアドレスで、パスワードは問題文に書いてありました。
これで準備は完了。後はプログラム書くだけ。
方針は、 アクティビティでボタンを押す→自分のサービスにバインド→配布アプリケーションと通信 LogCatに答えを出す 以上
Activity ServicebindService()で自分のサービスにバインドし、そこから配布されたアプリケーションにアクセスする。Class名にTestが付いてるけど、気にしない。
マニフェストserviceタグを記述する。
以上です。AIDL自体は知識としては知っていたけど、初めて使ったなぁ。</description></item><item><title>ACE勉強会で、Serviceの概要を発表した。</title><link>https://kwmt27.net/index.php/2011/08/15/ace%E5%8B%89%E5%BC%B7%E4%BC%9A%E3%81%A7service%E3%81%AE%E6%A6%82%E8%A6%81%E3%82%92%E7%99%BA%E8%A1%A8%E3%81%97%E3%81%9F/</link><pubDate>Mon, 15 Aug 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/08/15/ace%E5%8B%89%E5%BC%B7%E4%BC%9A%E3%81%A7service%E3%81%AE%E6%A6%82%E8%A6%81%E3%82%92%E7%99%BA%E8%A1%A8%E3%81%97%E3%81%9F/</guid><description>日本Androidの会 神戸支部で、「Androidアプリケーション技術者認定試験ベーシック対策実践問題集」をみんなで読んで勉強しようという勉強会（ACE勉強会）が毎週開催されているのですが（2011/08/10で6回目）、5回目のときにServiceはマルチスレッドか？という疑問が出たので、6回目までにServiceについて誰かまとめてきてーということだったので、手を上げてまとめた資料です。まとめたといっても、Developerサイトを訳しただけですが、それでも、疑問に対する回答はできると思ったので、まぁいいかなと。
あくまでも概要なので、雰囲気だけでもつかんで頂けたら幸いです。発表時にスレッドのところなど突っ込まれました。もうちょうっと細かく見ないといけませんね。
あ、結果的には質問した方の疑問には応えられなかったので、また次回ということになりました。なので、発表としては失敗ですね。もっと勉強しないと。</description></item><item><title>Android Bazaar and Conference 2011 Summer #abc2011s に参加してきました。</title><link>https://kwmt27.net/index.php/2011/07/29/android-bazaar-and-conference-2011-summer-abc2011s-%E3%81%AB%E5%8F%82%E5%8A%A0%E3%81%97%E3%81%A6%E3%81%8D%E3%81%BE%E3%81%97%E3%81%9F/</link><pubDate>Fri, 29 Jul 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/07/29/android-bazaar-and-conference-2011-summer-abc2011s-%E3%81%AB%E5%8F%82%E5%8A%A0%E3%81%97%E3%81%A6%E3%81%8D%E3%81%BE%E3%81%97%E3%81%9F/</guid><description>&lt;p>2011/07/17(日)に、&lt;a href="http://www.android-group.jp/abc2011s/" target="_blank">Android Bazaar and Conference 2011 Summer&lt;/a>に参加してきました。&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;h2 id="abc当日">■ABC当日&lt;a class="anchorjs-link" href="#abc%e5%bd%93%e6%97%a5">&lt;/a>&lt;/h2>&lt;p>場所は東京の早稲田大学、僕の生息地は神戸。&lt;/p>
&lt;p>行きました。飛行機で。&lt;/p>
&lt;p>朝7：20神戸空港発の飛行機で6：50ぐらいに神戸空港つきました。ギリギリ。&lt;/p>
&lt;p>ABCは10時からなので、10時前には到着の予定でした。&lt;/p>
&lt;p>でもそれは、東京行き慣れた人の話で、&lt;/p>
&lt;p>僕は羽田からの電車の切符を買うのに10分ぐらいかかってしまい、もうアウト。&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>会場では、&lt;a href="http://www.android-group.jp/abc2011s/conference.html" target="_blank">カンファレンス&lt;/a>と&lt;a href="http://www.android-group.jp/abc2011s/bazaar.html" target="_blank">バザール&lt;/a>がありました。&lt;/p>
&lt;p>あと先に書いておくと、いっぱい写真を載せたいですけど、基本的に顔が写っているので写ってない写真をのせています。&lt;/p>
&lt;p>それと、問題ないと思われる写真を掲載していますが、何か問題がありましたら、削除しますのでご連絡ください。&lt;/p></description></item><item><title>同じグループの文字列をxmlで定義し、配列として参照するには</title><link>https://kwmt27.net/index.php/2011/07/08/%E5%90%8C%E3%81%98%E3%82%B0%E3%83%AB%E3%83%BC%E3%83%97%E3%81%AE%E6%96%87%E5%AD%97%E5%88%97%E3%82%92xml%E3%81%A7%E5%AE%9A%E7%BE%A9%E3%81%97%E9%85%8D%E5%88%97%E3%81%A8%E3%81%97%E3%81%A6/</link><pubDate>Thu, 07 Jul 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/07/08/%E5%90%8C%E3%81%98%E3%82%B0%E3%83%AB%E3%83%BC%E3%83%97%E3%81%AE%E6%96%87%E5%AD%97%E5%88%97%E3%82%92xml%E3%81%A7%E5%AE%9A%E7%BE%A9%E3%81%97%E9%85%8D%E5%88%97%E3%81%A8%E3%81%97%E3%81%A6/</guid><description>同じグループの文字列をxmlに書いておいて、それをプログラム側で使いたい。
例えば、対応機種かどうかチェックするときなど、対応機種をxmlに書いておき、機種が増えるごとにそのxmlに追加していけば、プログラムの変更を不要にしたいときなど。
XMLファイルを置く場所
res/values/filename.xml
※filename は任意です。
&amp;lt;string-array&amp;gt; 要素の name はリソースIDとして参照されます。
Java 参考String Resources | Android Developers – String Array</description></item><item><title>夜子まま塾＠高槻に参加しました。</title><link>https://kwmt27.net/index.php/2011/06/26/%E5%A4%9C%E5%AD%90%E3%81%BE%E3%81%BE%E5%A1%BE%E9%AB%98%E6%A7%BB%E3%81%AB%E5%8F%82%E5%8A%A0%E3%81%97%E3%81%BE%E3%81%97%E3%81%9F/</link><pubDate>Sun, 26 Jun 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/06/26/%E5%A4%9C%E5%AD%90%E3%81%BE%E3%81%BE%E5%A1%BE%E9%AB%98%E6%A7%BB%E3%81%AB%E5%8F%82%E5%8A%A0%E3%81%97%E3%81%BE%E3%81%97%E3%81%9F/</guid><description>11/06/25に開催されました夜子まま塾＠高槻に参加しました。
場所は高槻のカトリック高槻教会。11時からでJR高槻駅から徒歩15分、阪急高槻市駅からは徒歩6分の場所。
僕はJRで10:50ぐらいにJR高槻に到着。徒歩15分もかかることを調べてなく、TAXIという贅沢な乗り物を使ってしまいました。この日の大阪の最高気温は32度。
会場
聖堂ではなくこの隣に建物があって、そのなかの2階でした。
今回の夜子まま塾は以下のような感じでした。
まず、下記３つのグループに分けます。
プログラミング未経験者 Android開発未経験者 ゲーム開発未経験者 さらに、５、６人ずつぐらいのチームに別れ、プログラミング未経験者は、即席のJavaの勉強をして、一通り終わったらJavaプログラムを作成し、Androidアプリの開発をしていきます。
Android開発未経験者は、開発環境をつくってAndroidアプリの開発。 ゲーム開発未経験者は雛形のゲームのプロジェクトを改造して独自のゲームを作る。 Androidの開発環境や雛形のゲームプロジェクトはUSBで準備して頂いてましたので、それをコピーするだけ。インターネット環境がなくても、すぐに作業開始できましたね。 僕はゲーム開発未経験者のグループに行き、４人チーム（１人はチューター）の１人として参加しました。僕の場合は４人とも知っていたので、特に名刺交換などせず、雛形のプロジェクトなど準備ができたら、何を作ろうか昼飯食べながらアイデアソンしました。
下の画像が雛形のゲーム。これをどうしようかと話し合い。
結果、続・ジョジョチームの僕たちは、次のようなものに改造しようということになりました。
「Android携帯に向かって、”オラオラオラ”と言ったら、玉が大きくなるようにしよう。」
音声認識を実装する人、玉の画像を大きくする人、それをくっつけるだけの人に分かれ作業開始。うむ、時間制限があると結構あせる。チューターさんに助けてもらいながら、１６：３０過ぎになんとか完成。ちなみに１６：３０から発表。過ぎてるじゃん。。。
結果はこんな感じ。玉の発射途中に”オラオラオラ”というと・・・
玉（蜂）が大きくなってくれました！
※経過時間が戻っているのは画像のキャプチャの都合です。
感想こういうハッカソンの参加は３回目でした。HTML5＆Androidハッカソンから始まり、京都GTUGのAndroid 勉強会＆ハッカソン、そして今回。1回目は全く何にもできなくて、撃沈。2回目はアイデアソンとハッカソンが別の日で、アイデアソンは参加したんですが、ハッカソン当日は仕事で会場に到着したのが、17:30ぐらいで何も出来ず撃沈。
そして3回目の今回にようやくやりたいことができて、発表も”できませんでした”ではなく、”できました！”と言えたので、ほんと嬉しかったですね。先生を始め、会場の準備やチューターの方々、チームのみんなのおかげです。本当にありがとうございました。
作業途中で少し思うこととしては、自分が今後そうしておこう思うことなんですが、チームで開発するにはSVNやGitなどのリポジトリを用意すると開発しやすいとは誰もが思うこと。チームで開発するときは、最低限SVNのクライアントはいれといた方がいいかなと思いました。リポジトリの場所は、Google Codeとかでもいいですが、開発用のDropBoxアカウントを取得しておいて、フォルダの共有し、そこにリポジトリを作成したらいいんじゃなかぁと思ったけど、どうなんだろ。
ネット環境は経験上、自分が用意しなくても会場にあったり、誰かのルーターにつながせてもらったりして、だいたいなんとかなりますね。とにかく、ハッカソンの場合は、そういう開発環境準備になるべく時間をかけずに開発だけに専念できるようにしときたいですね。まぁ開発環境準備のトラブルなどもハッカソンの醍醐味かもしれませんが（笑）
最後に最初の仕様とできたアプリが多少異なっているのはナイショ。</description></item><item><title>Android開発で必要なもの</title><link>https://kwmt27.net/index.php/2011/04/16/android%E9%96%8B%E7%99%BA%E3%81%A7%E5%BF%85%E8%A6%81%E3%81%AA%E3%82%82%E3%81%AE/</link><pubDate>Fri, 15 Apr 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/04/16/android%E9%96%8B%E7%99%BA%E3%81%A7%E5%BF%85%E8%A6%81%E3%81%AA%E3%82%82%E3%81%AE/</guid><description>こんなことすぐ調べれば分かるだろうと思ってたけど、やる機会が少ないのですぐ忘れてしまい、調べるのにも意外と時間がかかる。自分にとってあるとありがたいので、リンク先だけメモった。
&amp;lt;li&amp;gt; JDK(Mac以外) &amp;lt;/li&amp;gt; &amp;lt;p&amp;gt; &amp;lt;a href=&amp;quot;https://cds.sun.com/is-bin/INTERSHOP.enfinity/WFS/CDS-CDS_Developer-Site/en_US/-/USD/ViewProductDetail-Start?ProductRef=jdk-6u24-oth-JPR@CDS-CDS_Developer&amp;quot; target=&amp;quot;_blank&amp;quot; class=&amp;quot;broken_link&amp;quot;&amp;gt;https://cds.sun.com/is-bin/INTERSHOP.enfinity/WFS/CDS-CDS_Developer-Site/en_US/-/USD/ViewProductDetail-Start?ProductRef=jdk-6u24-oth-JPR@CDS-CDS_Developer&amp;lt;/a&amp;gt; &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; Select Window &amp;gt; Preferences&amp;amp;#8230; to open the Preferences panel (Mac OS X: Eclipse &amp;gt; Preferences).&amp;lt;br /&amp;gt; Select Android from the left panel.&amp;lt;br /&amp;gt; For the SDK Location in the main panel, click Browse&amp;amp;#8230; and locate your downloaded SDK directory.&amp;lt;br /&amp;gt; Click Apply, then OK. &amp;lt;/p&amp;gt;</description></item><item><title>画面回転時、再描画を防ぐには</title><link>https://kwmt27.net/index.php/2011/04/14/%E7%94%BB%E9%9D%A2%E5%9B%9E%E8%BB%A2%E6%99%82%E5%86%8D%E6%8F%8F%E7%94%BB%E3%82%92%E9%98%B2%E3%81%90%E3%81%AB%E3%81%AF/</link><pubDate>Wed, 13 Apr 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/04/14/%E7%94%BB%E9%9D%A2%E5%9B%9E%E8%BB%A2%E6%99%82%E5%86%8D%E6%8F%8F%E7%94%BB%E3%82%92%E9%98%B2%E3%81%90%E3%81%AB%E3%81%AF/</guid><description>Developerサイトから When a configuration change occurs at runtime, the activity is shut down and restarted by default,
デフォルトでは、設定が変更されたら（画面回転や、locale変更、キーボードタイプ変更など）、Activityはシャットダウンして、再起動します。
but declaring a configuration with this attribute will prevent the activity from being restarted.
android:configChangesを設定することで、Activityが再起動されるのを防ぎます。
Instead, the activity remains running and its onConfigurationChanged() method is called.
android:configChangesを設定して、設定変更（画面回転や、locale変更、キーボードタイプ変更など）すると、Activityは起動したままとなり、onConfigurationChanged()メソッドが呼ばれます。
画面回転時、再描画を防ぐには AndroidManifest.xmlに下記赤文字の箇所を追加する。
備考 上記の設定して、onConfigurationChanged()メソッドが本当に呼ばれるのか確認しようとして、Activityに
を追加して実行すると、画面回転時に強制終了してしまった。とりあえずLogCatをみると、
と出てた。super.onConfigurationChanged()が呼ばれなかった？じゃぁ、
として実行してみたら、強制終了しないでくれた。
androidソースを見てみると、それらしい記述がある。</description></item><item><title>コマンドラインからAndroidアプリを作成するには</title><link>https://kwmt27.net/index.php/2011/02/28/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%A9%E3%82%A4%E3%83%B3%E3%81%8B%E3%82%89android%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF/</link><pubDate>Sun, 27 Feb 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/02/28/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%A9%E3%82%A4%E3%83%B3%E3%81%8B%E3%82%89android%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF/</guid><description>&lt;p>Androidアプリ作成でEclipseを使ってプロジェクトの作成からインストールまでやっていましたが、サブPCのスペックがなくあまりにも重いので、この一連の流れをコマンドで実行してみた。&lt;/p>
&lt;p>いろいろ問題が生じたので、それも注意としてメモしておく。&lt;/p>
&lt;h2 id="今回作成例前提">今回作成例（前提）&lt;a class="anchorjs-link" href="#%e4%bb%8a%e5%9b%9e%e4%bd%9c%e6%88%90%e4%be%8b%e5%89%8d%e6%8f%90">&lt;/a>&lt;/h2>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h2 id="新規プロジェクトを作成する">新規プロジェクトを作成する&lt;a class="anchorjs-link" href="#%e6%96%b0%e8%a6%8f%e3%83%97%e3%83%ad%e3%82%b8%e3%82%a7%e3%82%af%e3%83%88%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b">&lt;/a>&lt;/h2>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>Created project directoryとか、Added file とか必要なディレクトリやファイルが追加されるログがでる。&lt;/p>
&lt;p>参考&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>でoptionの確認ができる。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h2 id="ビルドする">ビルドする&lt;a class="anchorjs-link" href="#%e3%83%93%e3%83%ab%e3%83%89%e3%81%99%e3%82%8b">&lt;/a>&lt;/h2>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>「BUILD SUCCESSFUL」と出たら成功&lt;/p>
&lt;p>参考&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>というコマンドもあるらしいが調べてない。&lt;/p>
&lt;h2 id="作成済みのavdを確認する実機なら不要">作成済みのAVDを確認する（実機なら不要）&lt;a class="anchorjs-link" href="#%e4%bd%9c%e6%88%90%e6%b8%88%e3%81%bf%e3%81%aeavd%e3%82%92%e7%a2%ba%e8%aa%8d%e3%81%99%e3%82%8b%e5%ae%9f%e6%a9%9f%e3%81%aa%e3%82%89%e4%b8%8d%e8%a6%81">&lt;/a>&lt;/h2>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>作成してなかったら、android.bat -h の create avdあたりを見て作成。まぁ、$android.batだけでGUIが起動するのでそれでOK。これぐらいなら軽い。&lt;/p>
&lt;h2 id="エミュレータを起動する実機なら不要">エミュレータを起動する（実機なら不要）&lt;a class="anchorjs-link" href="#%e3%82%a8%e3%83%9f%e3%83%a5%e3%83%ac%e3%83%bc%e3%82%bf%e3%82%92%e8%b5%b7%e5%8b%95%e3%81%99%e3%82%8b%e5%ae%9f%e6%a9%9f%e3%81%aa%e3%82%89%e4%b8%8d%e8%a6%81">&lt;/a>&lt;/h2>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>これもヘルプあり&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;h2 id="apkをインストールする注4">apkをインストールする(注4)&lt;a class="anchorjs-link" href="#apk%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b%e6%b3%a84">&lt;/a>&lt;/h2>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>これでインストールされたので、エミュレータやら実機で動作確認。&lt;/p></description></item><item><title>Galaxy SがWindowsで認識されなくなった時のメモ</title><link>https://kwmt27.net/index.php/2011/02/24/galaxy-s%E3%81%8Cwindows%E3%81%A7%E8%AA%8D%E8%AD%98%E3%81%95%E3%82%8C%E3%81%AA%E3%81%8F%E3%81%AA%E3%81%A3%E3%81%9F%E6%99%82%E3%81%AE%E3%83%A1%E3%83%A2/</link><pubDate>Thu, 24 Feb 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/02/24/galaxy-s%E3%81%8Cwindows%E3%81%A7%E8%AA%8D%E8%AD%98%E3%81%95%E3%82%8C%E3%81%AA%E3%81%8F%E3%81%AA%E3%81%A3%E3%81%9F%E6%99%82%E3%81%AE%E3%83%A1%E3%83%A2/</guid><description>症状
*Galaxy SをWindowsにUSB接続して、cygwinでadb devicesとすると、いままでシリアルナンバーを表示してくれてたのに、下記のように表示されなくなった。 $ adb devices
List of devices attached
原因
*おそらく原因は、Galaxy Sを2.2.1にアップグレードしたときに起動しなくなったので初期化したからだろう。（起動しなくなったときは焦りましたね(^^ゞ初期化したら起動してくれました。） はっきりとは分からないが、ドライバさんが「初期化前と後で違うからわかんない」っていってたのかもしれない。
対策
*デバイスマネージャの[Android USB Devices]の[SAMSUNG Android Composite ADB Interface]を削除して、実機を接続しなおした。</description></item><item><title>UbuntuにGalaxy Sを認識させるには</title><link>https://kwmt27.net/index.php/2011/02/23/ubuntu%E3%81%ABgalaxy-s%E3%82%92%E8%AA%8D%E8%AD%98%E3%81%95%E3%81%9B%E3%82%8B%E3%81%AB%E3%81%AF/</link><pubDate>Wed, 23 Feb 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/02/23/ubuntu%E3%81%ABgalaxy-s%E3%82%92%E8%AA%8D%E8%AD%98%E3%81%95%E3%81%9B%E3%82%8B%E3%81%AB%E3%81%AF/</guid><description>Ubuntu と Galaxy Sを初めてつないで、Eclipseからrunしようとしたら、Serial Numberが「??????」になってたのでググったときのメモ
# echo ‘SUBSYSTEM==”usb”, SYSFS{idVendor}==”04e8″, MODE=”0666″‘ &amp;raquo; /etc/udev/rules.d/51-android.rules
として、USBを離して再接続でいけた。
関係ないが、suだけじゃ認証失敗になるので、その時のメモ
****はuser名
2011/02/24追記
Using Hardware Devices | Android Developers によると、
上記の”04e8″は、USB Vendor IDというものだそうだ。Samsungの場合は”04e8″だが、HTCの場合は”0bb4″のようだ。ほかのベンダーのIDも決まっている。</description></item><item><title>apkをコマンドラインからアンインストールするには</title><link>https://kwmt27.net/index.php/2011/02/20/apk%E3%82%92%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%A9%E3%82%A4%E3%83%B3%E3%81%8B%E3%82%89%E3%82%A2%E3%83%B3%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B%E3%81%AB/</link><pubDate>Sun, 20 Feb 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/02/20/apk%E3%82%92%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%A9%E3%82%A4%E3%83%B3%E3%81%8B%E3%82%89%E3%82%A2%E3%83%B3%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B%E3%81%AB/</guid><description>これはエミュレータを立ち上げていて、同時に実機をUSB接続している場合、次のようなエラーが出る。
例えば実機にインストールされているアプリをアンインストールしたい場合、エミュレータを閉じればアンインストールできるが、アンインストールのたびにエミュレータを閉じるのはちょっと・・・。
こういう場合は、次のオプションを指定することで、エミュレータか実機を指定できる。
エミュレータを指定
$ adb -e uninstall &amp;lt;アンインストールしたいパッケージ名&amp;gt;
実機を指定
$ adb -d uninstall &amp;lt;アンインストールしたいパッケージ名&amp;gt;
※このオプションは、アンインストールに限らない。
複数のエミュレータを立ち上げている場合や複数の実機を接続している場合は、
$ adb devices
でを確認して、
$ adb -s uninstall &amp;lt;アンインストールしたいパッケージ名&amp;gt;
とかすればよい。</description></item><item><title>Galaxy Sのroot化後、sqlite3が使えなくなった時のメモ</title><link>https://kwmt27.net/index.php/2011/02/03/galaxy-s%E3%81%AEroot%E5%8C%96%E5%BE%8Csqlite3%E3%81%8C%E4%BD%BF%E3%81%88%E3%81%AA%E3%81%8F%E3%81%AA%E3%81%A3%E3%81%9F%E6%99%82%E3%81%AE%E3%83%A1%E3%83%A2/</link><pubDate>Wed, 02 Feb 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/02/03/galaxy-s%E3%81%AEroot%E5%8C%96%E5%BE%8Csqlite3%E3%81%8C%E4%BD%BF%E3%81%88%E3%81%AA%E3%81%8F%E3%81%AA%E3%81%A3%E3%81%9F%E6%99%82%E3%81%AE%E3%83%A1%E3%83%A2/</guid><description>昨日の記事（Galaxy Sをroot化してプチフリ対策をした）でGalaxy Sのrootをとったわけですが、今日sqlite3を使おうとしたら、”ない”って言われたので、そのときのメモ。
注）以下の各コマンド実行後の結果は、正確な結果ではありません。忘れちゃいました。
$ adb shell
$ su
# sqlite3 ***.db
sqlite3 not found ←あれ？なんで？
ググリました。
そしたら、下記サイトで書いてくださってました。
adb shell後のsqlite3がnot found!!
TitaniumBackupに拉致られた？と。
ルートディレクトリで find | grep sqlite3 とすると、たしかに下記ディレクトリにありました。
/data/data/com.keramidas.TitaniumBackup/files/sqlite3
で、上記サイトのとおり、copyしようとすると・・
# cp sqlite3 /system/bin
Can’t creat … Read-only file system
エラーがでました。
ググリました。
下記サイトで書いてくださってました
[Android] Read-only file system
# mount
・・・省略
/dev/block/stl9 /system rfs ro,relatime,vfat,llw,check=no,gid/uid/rwx,iocharset=
utf8 0 0
・・・省略
※Galaxy Sでは「/dev/block/stl9 /system」のようです。
# mount -o rw,remount /dev/block/stl9 /system
# mount
・・・省略</description></item><item><title>Galaxy Sをroot化してプチフリ対策をした</title><link>https://kwmt27.net/index.php/2011/02/01/galaxy-s%E3%82%92root%E5%8C%96%E3%81%97%E3%81%A6%E3%83%97%E3%83%81%E3%83%95%E3%83%AA%E5%AF%BE%E7%AD%96%E3%82%92%E3%81%97%E3%81%9F/</link><pubDate>Tue, 01 Feb 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/02/01/galaxy-s%E3%82%92root%E5%8C%96%E3%81%97%E3%81%A6%E3%83%97%E3%83%81%E3%83%95%E3%83%AA%E5%AF%BE%E7%AD%96%E3%82%92%E3%81%97%E3%81%9F/</guid><description>Galaxy S SC-02B root取得からリカバリまでhttp://komugi.net/archives/2010/10/28225019
上記サイトを参考に、Galaxy Sをroot化してプチフリ対策をした。
この記事は完全に、自分もやったという記録です。（細かいやり方などは書いてません。独り言です。）
自分がやった順番で、上記サイトで少し分からなかったことを付け加えながら書いてみよう。
あ、root化するとDocomoからのサポートが受けられなくなるらしいので、覚悟を決めて。
*1.Galaxy Sのドライバインストール（kies)→これはすでに済み 2.「SuperOneClick」をPCにインストールし、PCで作業。
これで、suコマンドとSuperuserPermissionsをGalaxy Sに入れてくれる。
3．Galaxy Sを再起動
ここまででroot化は終了。
*ここからはプチフリ対策。以下はすべてGalaxy S側で操作。 4.「Quadrant Standard」アプリで、プチフリ対策前のベンチマークをした。
ふむふむ。まぁこんなものか。
5．「BusyBox」アプリをマーケットで検索しインストール。
このアプリを起動すると、Toastで「スーパーユーザー権限を取得しました」と出て、System dataを集めているのでしばらく待つ。
（Galaxsy Sを再起動せずにBusyBoxを起動したら夜ずっとPlease Wait…の状態だった。。）
BusyBox下部のInstallをタップすると、いろいろなツールがコピーされる。
※これは、あとでTitaniumBackupするときに必要になるもの。（もしかしたらOCLFでも必要かも。BusyBoxをインストールせずにTitanimuBackupを起動したら、BusyBoxが必要ですと怒られたので。）
6．「TitaniumBackup」をマーケットで検索、インストールして、プチフリ対策アプリを実施する前に、バックアップした。
全部バックアップするには、
アプリ起動→Menu→バッチ処理→リストの上から4つ目の「バックアップ：全ユーザーアプリ＋システムデータ」の実行をタップしてしばらく待つ。（205項目で約10分ちょいぐらいだった。まぁ入れてるアプリによると思いますが。）
7．「One Click Lag Fix」はメインのプチフリ対策アプリ。
マーケットで「One Click Lag Fix」と検索すると、「RyanZA’s OCLF 2.0」が出てくるがこれでOK。
OCLF=One Click Lag Fixの略みたい
僕はOCLFのバージョンは2.3.0を使用
バックアップ完了後、上記サイトのとおり、SDカードを抜いて、「Install EXT2 Tools」完了後、「OneClickLagFix V2.2+」を実行。
Ext Sizeは870MBぐらいにした。
プチフリ対策はここまで。
8.「Quadrant Standard」アプリで、プチフリ対策後のベンチマークをした。
お～、感動！！
最後になりましたが、コムギドットネットさんありがとうございました。</description></item><item><title>文字列を1行に収めるには</title><link>https://kwmt27.net/index.php/2011/01/22/%E6%96%87%E5%AD%97%E5%88%97%E3%82%921%E8%A1%8C%E3%81%AB%E5%8F%8E%E3%82%81%E3%82%8B%E3%81%AB%E3%81%AF/</link><pubDate>Sat, 22 Jan 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/01/22/%E6%96%87%E5%AD%97%E5%88%97%E3%82%921%E8%A1%8C%E3%81%AB%E5%8F%8E%E3%82%81%E3%82%8B%E3%81%AB%E3%81%AF/</guid><description>こんな感じで、ListViewなどに表示する文字列が長すぎて、折り返されるのが気にくわない時、下記を指定すれば、一行に収まってくれる。
android:scrollHorizontally:”true”は、文字列が画面に収まりきらない場合、”false”の場合は折り返されて2行目以降に表示されますが、”true”の場合は、折り返されません。
android:scrollHorizontally=”true” の状態で、android:ellipsize=”end” とすると、最後(end)に省略記号(…)を入れてくれます。”end”のほかに”start”,”middle”などもあります。
scrollHorizontally=”true”とellipsize=”end”を指定した結果
参考
Androidアプリ入門 No.07 TextViewのフォント関連以外の主な属性
ここはめちゃくちゃ参考になりました。ありがとうございます。
TextView | Android Developers</description></item><item><title>apkをコマンドラインからインストールするには</title><link>https://kwmt27.net/index.php/2011/01/11/apk%E3%82%92%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%A9%E3%82%A4%E3%83%B3%E3%81%8B%E3%82%89%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF/</link><pubDate>Tue, 11 Jan 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/01/11/apk%E3%82%92%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%A9%E3%82%A4%E3%83%B3%E3%81%8B%E3%82%89%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF/</guid><description>cygwinかコマンドプロンプトを開いて
を確認するには
とか出てくる。
あ、もちろん、エミュレーターにインストールしたい場合はエミュレーターを起動しておくか、実機にインストールしたい場合は、実機をPCに繋いで認識させておく必要がある。
エミュレーターも実機もなかったら、下記のように出る。
adbは下記にある。パスを通しておくと楽。</description></item><item><title>Windows7でrepoコマンド初期化するとエラーが出たときの対処方法</title><link>https://kwmt27.net/index.php/2011/01/12/windows7%E3%81%A7repo%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E5%88%9D%E6%9C%9F%E5%8C%96%E3%81%99%E3%82%8B%E3%81%A8%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E5%87%BA%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AE/</link><pubDate>Tue, 11 Jan 2011 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2011/01/12/windows7%E3%81%A7repo%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E5%88%9D%E6%9C%9F%E5%8C%96%E3%81%99%E3%82%8B%E3%81%A8%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E5%87%BA%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AE/</guid><description>経緯
*Androidのソースコードを落とそうと、下記サイトを参考にして、「Androidソースコード ダウンロード手順」の「５．repoコマンド初期化」まできたときに、エラーが出た。 あんどろサイト{.broken_link}
エラー内容
原因
*下記サイトによると、Python2.6であることが原因 http://survivant.wordpress.com/2010/09/06/git-repository-server-gitosis-on-win7-troubleshooting/
If you had this error, it’s because you installed Python 2.6 instead of 2.5. Reinstall Python 2.5 and Setuptool for Python 2.5.
対策
*cygwinをインストールした時のsetup.exeを使用して、Python&amp;gt;python:Python language interpreterが2.6.*となっているため、”Keep”とかになっているところをクリックして、2.5.*に変更してインストールしなおす。 インストールが終わったら、再度repoコマンド初期化（~/bin/repo init -u git://android.git.kernel.org/platform/manifest.git）を実行する。
なぜか分からないが、このとき、初期化1回目は失敗し、2回目の実行でうまく初期化できた。
ついでに
*repo syncするときも次のようなエラーが出たので、それも書いておこう。 これの対処方法は、冒頭のあんどろサイトさんにも書かれてあるが、rebaseallをするとうまくいった。
なんかfailedになったけど、気にせずrepo syncしたら動いてくれたので、見なかったことにしようと思う。
そうそう、rebaseallを実行する時は、ash以外にCygwinのプロセスが動いていないことに注意するとのことでした。
備考
*repoコマンド初期化でエラーが出たOSはWindows 7で、Windows XPでやったときは出ませんでした。もちろんXPでのpythonのバージョンは2.6.5です。2.5.*ではなくてエラーが出なかったのです。</description></item><item><title>eclipseのConsolに、「Could not find &lt;プロジェクト名>.apk!」と出たときの対処法</title><link>https://kwmt27.net/index.php/2010/12/19/eclipse%E3%81%AEconsol%E3%81%ABcould-not-find-apk%E3%81%A8%E5%87%BA%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95/</link><pubDate>Sun, 19 Dec 2010 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2010/12/19/eclipse%E3%81%AEconsol%E3%81%ABcould-not-find-apk%E3%81%A8%E5%87%BA%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95/</guid><description>eclipseのConsolに次のように出て起動しない。
[2010-12-19 20:57:49 - &amp;lt;プロジェクト名&amp;gt;] Android Launch! [2010-12-19 20:57:49 - &amp;lt;プロジェクト名&amp;gt;] adb is running normally. [2010-12-19 20:57:49 - &amp;lt;プロジェクト名&amp;gt;] Could not find &amp;lt;プロジェクト名&amp;gt;.apk! Project→Clean
で解決した。
参考
Could not find MyApp.apk!</description></item><item><title>eclipseのエンコードをUTF-8に変更する</title><link>https://kwmt27.net/index.php/2010/12/20/eclipse%E3%81%AE%E3%82%A8%E3%83%B3%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92utf-8%E3%81%AB%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B/</link><pubDate>Sun, 19 Dec 2010 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2010/12/20/eclipse%E3%81%AE%E3%82%A8%E3%83%B3%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92utf-8%E3%81%AB%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B/</guid><description>[Window]→[Preference]をクリックし、
左側の[General]-[Content Types]を選択
右側の[Java Source File]を選択して、
下部の[Default encoding]にUTF-8と入力し、OKを押す。</description></item><item><title>Galaxy SのメールについてDocomoショップ店員に聞いてきた</title><link>https://kwmt27.net/index.php/2010/11/07/galaxy-s%E3%81%AE%E3%83%A1%E3%83%BC%E3%83%AB%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6docomo%E3%82%B7%E3%83%A7%E3%83%83%E3%83%97%E5%BA%97%E5%93%A1%E3%81%AB%E8%81%9E%E3%81%84%E3%81%A6%E3%81%8D%E3%81%9F/</link><pubDate>Sun, 07 Nov 2010 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2010/11/07/galaxy-s%E3%81%AE%E3%83%A1%E3%83%BC%E3%83%AB%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6docomo%E3%82%B7%E3%83%A7%E3%83%83%E3%83%97%E5%BA%97%E5%93%A1%E3%81%AB%E8%81%9E%E3%81%84%E3%81%A6%E3%81%8D%E3%81%9F/</guid><description>経緯
という疑問がでた。（もうここで僕が勘違いしていることがわかる人にはわかるかもしれないけど、このときはまだわかっていませんでした。）
つまり、僕はWifi接続のみの状態でdocomo.ne.jpのメール（以下docomoメール）を送受信したいということから出た疑問です。
そこでいろいろGalaxy Sをいじってみたところ、ネットワークモードの設定で
というのがあったので、GSMの意味もわからず、「これが、Wifiと3Gの切り替えなんだな」と（勝手に）思って、[GSMのみ]に設定しておいた。
1日ぐらいたって、docomoメールから届くはずのメールが届かない！
そこで、[GSMのみ]にしていた設定を、[GSM/3G（自動モード）]に設定しなおしたところ、メールが受信された。
Docomoショップの店員さんに聞いたこと
*●Docomoショップの店員さんに最初の疑問について聞いてみると、「GSM対応エリアの場合この設定を使い、日本はGSM対応エリアではないため、GSMのみの設定にしているとdocomoメールは届きません」とのこと。（ GSM – Wikipedia）
●また、「常時Wifi接続したいんだけど、どうしたらいい？」については、
2箇所設定する必要があるようです。
1つは、[データ通信]のチェックを外すこと。
もう1つは、[mopera U設定]にすることです。
常時Wifi接続方法
ホーム画面でメニューボタンを押し、[設定]をタップする。
設定画面で、[無線とネットワーク]をタップする
&amp;lt;img alt=&amp;ldquo;設定画面で、無線とネットワークをタップする&amp;rdquo;。 src=&amp;ldquo;http://androg.up.seesaa.net/image/SettingImage-thumbnail2.png" width=&amp;ldquo;192&amp;rdquo; height=&amp;ldquo;320&amp;rdquo; border=&amp;ldquo;0&amp;rdquo; align=&amp;rdquo;&amp;quot; pbsrc=&amp;ldquo;http://androg.up.seesaa.net/image/SettingImage.png" class=&amp;ldquo;PopBoxImageSmall&amp;rdquo; onclick=&amp;ldquo;Pop(this,100,&amp;lsquo;PopBoxImageLarge&amp;rsquo;);&amp;rdquo; /&amp;gt;
無線とネットワーク画面で、[モバイルネットワーク]をタップする。
モバイルネットワーク画面で、[データ通信]のチェックを外す。そして[アクセスポイント名]をタップする。
APN画面で[mopera U設定]にチェックする
●「常時Wifi接続した状態でdocomoメールは受信できる？」については、
できない。送受信するには、どうしてもパケット通信料がかかってしまうとのことです。
結論？
*つまり、Wifiルータを持っている人なんかはできるだけ費用を安く済ませたいと思っているかもしれませんが、spモードを契約してdocomoメールを使いたい人は、パケホーダイダブルの上限までいっちゃう可能性がありますね。 対策としては、docomoメールやめて、Gmailのみに変更するぐらいしか思いつきません。docomoメールも使いたい場合、安く済ませるいい方法ないですかね？</description></item><item><title>Galaxy S のドライバをインストールした</title><link>https://kwmt27.net/index.php/2010/10/30/galaxy-s-%E3%81%AE%E3%83%89%E3%83%A9%E3%82%A4%E3%83%90%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%97%E3%81%9F/</link><pubDate>Sat, 30 Oct 2010 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2010/10/30/galaxy-s-%E3%81%AE%E3%83%89%E3%83%A9%E3%82%A4%E3%83%90%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%97%E3%81%9F/</guid><description>PC側の設定
SAMSUNG mobileのページからSamsung Kiesというのをダウンロードする。
あとはダブルクリックしてインストールするだけ。
途中、すべてをインストールするか、携帯電話以外のほかのドライバ（MP3プレイヤーなど）をインストールするかを選択できる画面がでるが、僕は携帯だけしか使わないので、携帯電話を選択しました。
Galaxy S側の設定
*[設定]→[アプリケーション]→[開発] とタップしていき、[USBデバッグ]をONにする。このとき、USBは接続しないでおく。
Galaxy S　バージョン画面をキャプチャ
キャプチャする別の方法
juggly.cnさんのページで紹介されてましたが、
Galaxy Sの戻るボタンとホームボタンを表示すればOKとのこと。</description></item><item><title>androidkobeへ行ってきた</title><link>https://kwmt27.net/index.php/2010/10/25/androidkobe%E3%81%B8%E8%A1%8C%E3%81%A3%E3%81%A6%E3%81%8D%E3%81%9F/</link><pubDate>Sun, 24 Oct 2010 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2010/10/25/androidkobe%E3%81%B8%E8%A1%8C%E3%81%A3%E3%81%A6%E3%81%8D%E3%81%9F/</guid><description>日本Androidの会神戸支部へ参加させて頂きました。#androidkobe
大変貴重な体験をさせていただきました。
１つは、IS03に触ったこと。
いろいろ説明がありましたが、僕はメモリ液晶というのが良さげかなと思います。
時計部分が常に表示されているので、何もボタンを押さなくても時間がわかる。
これは地味だけど、意外と重要なんじゃないかと思いました。
あとは、表示がめちゃくちゃきれいでしたね。
敷居が高いスマートフォンですが、おサイフケータイやワンセグ機能のあるIS03は一般ユーザーさんにうけそうな予感。
もう１つは、日本Androidの会会長丸山先生とタバコ吸ったこと。
講演などでは絶対に聞けない質問をさせていただいたり、マジメなクラウドのお話をして頂いたり、とても貴重でした。 タバコは百害あって一利なしというけど、こういうときはいいですねw
参考
yishiiさんのブログでも感想を書かれていますので、ご参考ください。 http://projectc3.seesaa.net/article/166969199.html</description></item><item><title>更新アイコンみっけ</title><link>https://kwmt27.net/index.php/2010/10/20/%E6%9B%B4%E6%96%B0%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%81%BF%E3%81%A3%E3%81%91/</link><pubDate>Wed, 20 Oct 2010 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2010/10/20/%E6%9B%B4%E6%96%B0%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%81%BF%E3%81%A3%E3%81%91/</guid><description>更新のメニューアイコンが欲しいと思って調べてみた。
R.drawable | Android Developers
Taosoftware←ここはアイコンを画像と一緒にアップしてくれてるのでわかりやすい！
など。結果、デフォルトでは無いことが判明。どこでみたか忘れたが、バグらしい。
ほんで、みっけたのでがこれ。
ic_menu_refresh.png{.broken_link}
ほかにも参考になりそうなのを、ペタっと。
android.git.kernel.org Git – platform/packages/apps/Email.git/commitdiff{.broken_link}</description></item><item><title>HTC Desire(X06HTⅡ)のシーンを変えてみた</title><link>https://kwmt27.net/index.php/2010/10/12/htc-desirex06ht%E3%81%AE%E3%82%B7%E3%83%BC%E3%83%B3%E3%82%92%E5%A4%89%E3%81%88%E3%81%A6%E3%81%BF%E3%81%9F/</link><pubDate>Mon, 11 Oct 2010 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2010/10/12/htc-desirex06ht%E3%81%AE%E3%82%B7%E3%83%BC%E3%83%B3%E3%82%92%E5%A4%89%E3%81%88%E3%81%A6%E3%81%BF%E3%81%9F/</guid><description>せっかくキャプチャできるようになったので、、、
HTC Desire(X06HTⅡ)のホーム画面でmenuボタンを押すと「シーン」というのがあり、それをタップすると6種類のシーンがありますが、そのシーンごとにキャプチャしてペタペタ貼ります。
デフォルト（HTC）
ソーシャル
ビジネス
オフタイム
トラベル
白紙の画面
これだけです。</description></item><item><title>HTC Desire(X06HTⅡ)の画面キャプチャ方法</title><link>https://kwmt27.net/index.php/2010/10/11/htc-desirex06ht%E3%81%AE%E7%94%BB%E9%9D%A2%E3%82%AD%E3%83%A3%E3%83%97%E3%83%81%E3%83%A3%E6%96%B9%E6%B3%95/</link><pubDate>Mon, 11 Oct 2010 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2010/10/11/htc-desirex06ht%E3%81%AE%E7%94%BB%E9%9D%A2%E3%82%AD%E3%83%A3%E3%83%97%E3%83%81%E3%83%A3%E6%96%B9%E6%B3%95/</guid><description>Android好きな人たちにとっては、だいぶいまさら感はあるかもしれませんが、HTC Desire(X06HTⅡ)端末の画面をキャプチャしたくていろいろ調べましたが、PCとのUSB接続しないとキャプチャできないようです。
以下のサイトが大変参考になりました。
八角研究所 : Android で再開する Java プログラミング（8） – docomo HT-03A を入手～実機で Android アプリを動かしてみよう
(別窓で開く)
ですが、自分なりにまとめてみようと思い筆をとった次第です。
【やりたいこと】
HTC Desire(X06HTⅡ)端末の画面をキャプチャしたい 【現状】
HTC Desire(X06HTⅡ)端末をUSB接続して、Android SDKのtoolsフォルダにあるddms.batをクリックして、「Dalvik Debug Monitor」を起動しても端末を認識してくれない。 ※Android SDKは下記サイトからダウンロード可能です。
http://developer.android.com/sdk/index.html
(別窓で開く)
【対策】
*・ HTC社公式サイト（中国語）からドライバをダウンロードして、インストールする。 (別窓で開く) ※HTC社公式サイトのページの最下部
※Asia2を選択したのは、1度Asia1を選択してダウンロードを試みたが、僕のところの環境では遅かったため、Asia2を選択しただけです。
2011/01/29追記
上記のリンク先が変わっていたので、下記に変更しました！
・HTC社公式サイト（中国語）からドライバをダウンロードして、インストールする。
(別窓で開く)
※HTC社公式サイトのページの最下部
–2011/01/29追記ここまで–
・端末を繋いでいたら、いったん外し再度接続する。
このとき、USBデバッグにチェックを入れておく。
【備考】
*HTC Sync（iTunesみたいな物？）という余計なものまでインストールされます。 【結果】
*もう上で結果が出ていますが、今回キャプチャしたかったのは、Android2.2にする前に、2.1の情報を記念に残しておきたかっただけですので、結果はこうなります。 以上です。</description></item><item><title>DDMSのEmulation Control:Speedの意味</title><link>https://kwmt27.net/index.php/2010/09/06/ddms%E3%81%AEemulation-controlspeed%E3%81%AE%E6%84%8F%E5%91%B3/</link><pubDate>Mon, 06 Sep 2010 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2010/09/06/ddms%E3%81%AEemulation-controlspeed%E3%81%AE%E6%84%8F%E5%91%B3/</guid><description>DDMSのEmulation Controlでネットワークスピードを変更しながらデバッグできるが、それぞれがどういう関係で、どういう意味かわからなかったので、簡単にまとめてみた。
基本的には本家サイトAndroid Emulatorに書かれてある。
GSM　＜　HSCSD　＜　GPRS　＜　EDGE　＜　UMTS　＜　HSDPA
FULL は制限なし
GSM(Global System for Mobile Communications) FDD-TDMA方式で実現されている第二世代携帯電話(2G)規格(Up: 14.4 , down: 14.4) HSCSD(High Speed Circuit Switch Data) GSMの高速回線交換データ通信(Up: 14.4, down: 43.2) GPRS(General Packet Radio Service) GSMのパケットデータ通信(Up: 40.0, down: 80.0) EDGE(Enhanced Data Rates for GSM Evolution) GRPSを拡張したパケット通信規格(Up: 118.4, down: 236.8) UMTS(Universal Mobile Telecommunications System) 第3世代(3G)移動通信テクノロジーの1つで、W-CDMAを使う(Up: 128.0, down: 1920.0) HSDPA(High Speed Downlink Packet Access) W-CDMAを拡張した高速パケット通信規格(3.5G)(Up: 348.0, down: 14400.</description></item><item><title>Unparsed aapt errorの解決策</title><link>https://kwmt27.net/index.php/2010/09/06/unparsed-aapt-error%E3%81%AE%E8%A7%A3%E6%B1%BA%E7%AD%96/</link><pubDate>Mon, 06 Sep 2010 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2010/09/06/unparsed-aapt-error%E3%81%AE%E8%A7%A3%E6%B1%BA%E7%AD%96/</guid><description>Problemに出ているエラーを右クリックで削除
genフォルダを削除
Project→Clean
後、Run。
http://groups.google.co.jp/group/android-developers/browse_thread/thread/bad9d488d2068260
のPeeyushさんの回答で解決。</description></item><item><title>xml＋javaでUIを表示</title><link>https://kwmt27.net/index.php/2010/08/29/xmljava%E3%81%A7ui%E3%82%92%E8%A1%A8%E7%A4%BA/</link><pubDate>Sun, 29 Aug 2010 00:00:00 +0000</pubDate><guid>https://kwmt27.net/index.php/2010/08/29/xmljava%E3%81%A7ui%E3%82%92%E8%A1%A8%E7%A4%BA/</guid><description>setting.xml
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt; &amp;lt;LinearLayout xmlns:android=&amp;#34;http://schemas.android.com/apk/res/android&amp;#34; android:orientation=&amp;#34;vertical&amp;#34; android:layout_width=&amp;#34;fill_parent&amp;#34; android:layout_height=&amp;#34;fill_parent&amp;#34;&amp;gt; &amp;lt;CheckBox android:id=&amp;#34;@+id/checkbox_maponoff_id&amp;#34; android:text=&amp;#34;@string/checkbox_maponoff&amp;#34; android:layout_width=&amp;#34;wrap_content&amp;#34; android:layout_height=&amp;#34;wrap_content&amp;#34; /&amp;gt; &amp;lt;/LinearLayout&amp;gt; SettingActivity.java
public class SettingActivity extends Activity implements View.OnClickListener { private CheckBox chkbox = null; //チェックボックス //初期化 @Override public void onCreate(Bundle icicle) { super.onCreate(icicle); //setting.xmlで記述したレイアウトを表示 setContentView(R.layout.setting); //setting.xmlで記述した部品を使用したい場合 chkbox = (CheckBox)findViewById( R.id.checkbox_id); //setting.xmlで指定したidを取得 chkbox.setChecked(true);　//チェックボックスをチェックした状態で初期化する } } setContentView(R.layout.setting); の”setting”はxmlファイルのファイル名
結果はこれ。
背景が白いのは、
AndroidManifest.xml
で、
&amp;lt;!-- アプリケーションの定義 --&amp;gt; &amp;lt;application android:theme=&amp;#34;@android:style/Theme.Light&amp;#34; &amp;gt; というように、android:themeにTheme.Lightを指定しているため。
ちなみに、Theme.Light以外にもたくさんある。
http://developer.android.com/intl/ja/reference/android/R.style.html</description></item></channel></rss>