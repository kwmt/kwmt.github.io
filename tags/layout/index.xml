<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Layout on Androg</title>
    <link>https://kwmt27.net/tags/layout/</link>
    <description>Recent content in Layout on Androg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 07 Feb 2021 14:30:00 +0900</lastBuildDate>
    
	<atom:link href="https://kwmt27.net/tags/layout/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Layout in Jetpack compose</title>
      <link>https://kwmt27.net/2021/02/07/jetpack-compose-layout/</link>
      <pubDate>Sun, 07 Feb 2021 14:30:00 +0900</pubDate>
      
      <guid>https://kwmt27.net/2021/02/07/jetpack-compose-layout/</guid>
      <description>はじめに 基本的には、こちらのコードラボをメモしたものです。 https://developer.android.com/codelabs/jetpack-compose-layouts
試したことはこちらに置いてます。
縦に並べるには Column を使う
Column { Text(&amp;quot;Alfred Sisley&amp;quot;, fontWeight = FontWeight.Bold) Providers(AmbientContentAlpha provides ContentAlpha.medium) { Text(&amp;quot;3 minutes ago&amp;quot;, style = MaterialTheme.typography.body2) } }  横に並べるには Rowを使う
Row { Surface( modifier = Modifier.preferredSize(50.dp), shape = CircleShape, color = MaterialTheme.colors.onSurface.copy(alpha = 0.2f) ) { // image goes here } Column { Text(&amp;quot;Alfred Sisley&amp;quot;, fontWeight = FontWeight.Bold) Providers(AmbientContentAlpha provides ContentAlpha.medium) { Text(&amp;quot;3 minutes ago&amp;quot;, style = MaterialTheme.typography.body2) } } }  ここでは、円形画像のプレースホルダーを作るためにSurfaceを使って、先程のColumnと横に並べています。</description>
    </item>
    
    <item>
      <title>Building Layouts in Flutterを読んだときのメモ</title>
      <link>https://kwmt27.net/2018/06/24/building-layouts-in-flutter/</link>
      <pubDate>Sun, 24 Jun 2018 16:30:00 +0900</pubDate>
      
      <guid>https://kwmt27.net/2018/06/24/building-layouts-in-flutter/</guid>
      <description>はじめに Building Layouts in Flutterを読みながら実際にコードを書いていったときのメモです。
メモ  Containerはその子供のWidgetをカスタマイズすることができる
 パディング、マージン、ボーダー、背景色などを追加したいとき、Containerを使う  レイアウトを基本要素に分割
 RowとCoumnを見分ける レイアウトにグリッドはあるか？ オーバーラップする要素はあるか？ UIはタブが必要か？ アライメントやパディング、ボーダーが必要なエリアに注目   プロジェクト内の画像の使うには  画像はプロジェクトルートにimagesディレクトリを作ってその中に配置し、pubspec.yamlにassets項目を追加する。 ```yaml assets:
 images/lake.jpg ```  画像を使いたいところで、たとえばImage.asset()を使う
body: new ListView( children: &amp;lt;Widget&amp;gt;[ new Image.asset( &#39;images/lake.jpg&#39;, width: 600.0, height: 240.0, fit: BoxFit.cover, ),  fitプロパティの指定は、ドキュメントに画像付きで書かれてるいるのでわかりやすい
 https://docs.flutter.io/flutter/painting/BoxFit-class.html BoxFit.coverはAndroidのImageView.ScaleTypeでいうところのCENTER_CROPかな？！  Image Classのドキュメント
 https://docs.flutter.io/flutter/widgets/Image-class.html   左寄せにするには crossAxisAlignment: CrossAxisAlignment.start,   ドキュメント  https://docs.flutter.io/flutter/rendering/CrossAxisAlignment-class.html#constants   余白を追加するには Containerでラップして、paddingにEdgeInsetsを使う。</description>
    </item>
    
  </channel>
</rss>