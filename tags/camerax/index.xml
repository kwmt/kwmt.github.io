<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Camerax on Androg</title>
    <link>https://kwmt27.net/tags/camerax/</link>
    <description>Recent content in Camerax on Androg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 12 Jun 2021 21:25:00 +0900</lastBuildDate>
    
	<atom:link href="https://kwmt27.net/tags/camerax/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jetpack ComposeでCameraXを実装する</title>
      <link>https://kwmt27.net/2021/06/12/jetpack-compose-camerax/</link>
      <pubDate>Sat, 12 Jun 2021 21:25:00 +0900</pubDate>
      
      <guid>https://kwmt27.net/2021/06/12/jetpack-compose-camerax/</guid>
      <description>はじめに composeバージョンは下記です。
   Jetpack ComposeでのCameraXの実装を試したのでメモしておきたいと思います。 下の動画のようなイメージです。
ソースはGitHubにおいてます。 https://github.com/kwmt/JetpackComposePlayGround/tree/main/camerax/src/main/java/net/kwmt27/camerax
実行するときはConfigurationをcameraxを選択してから実行してみてください。
CameraXはAndroidViewを使う 現在のところ、CameraXを使うにはAndroidViewを使うしかなさそうです。 以下のようにしました。
   usecaseをバインドする usecaseをバインドしてるところは下記のところです。 使用しているUseCaseは、Preview、ImageAnalysisです。 この部分はいままでのcomposeを使わない場合と同じですね。
   RuntimePermissionの実装 カメラはもちろんRuntimePermissionの実装が必要でそれは次のようにやっています。
まず、カメラパーミッションが拒否されたときの画面を作成します。
   このとき、設定画面にstartActivityResultで行って、戻ってきたときのイベントを伝えるために callback: () -&amp;gt; Unitを渡していますので、設定画面から戻ってきたら handler.requestがよばれます。
   handlerはPermissionHandlerという自前のクラスを作っていて、そこでカメラパーミッションが許可されてなければ、設定画面に遷移するし、許可されていれば、onGrantedというFlowに通知します。
   以上です。</description>
    </item>
    
    <item>
      <title>Getting Started with CameraXというCodelabをやってみた</title>
      <link>https://kwmt27.net/2019/05/02/getting-started-with-camerax/</link>
      <pubDate>Thu, 02 May 2019 23:50:00 +0900</pubDate>
      
      <guid>https://kwmt27.net/2019/05/02/getting-started-with-camerax/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>